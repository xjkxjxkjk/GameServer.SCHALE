// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace SCHALE.Common.FlatData
{

using global::System;
using global::System.Collections.Generic;
using global::SCHALE.Common.Crypto;
using global::Google.FlatBuffers;

public struct EventContentDiceRaceProbExcel : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_24_3_25(); }
  public static EventContentDiceRaceProbExcel GetRootAsEventContentDiceRaceProbExcel(ByteBuffer _bb) { return GetRootAsEventContentDiceRaceProbExcel(_bb, new EventContentDiceRaceProbExcel()); }
  public static EventContentDiceRaceProbExcel GetRootAsEventContentDiceRaceProbExcel(ByteBuffer _bb, EventContentDiceRaceProbExcel obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public EventContentDiceRaceProbExcel __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public long EventContentId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public SCHALE.Common.FlatData.EventContentDiceRaceResultType EventContentDiceRaceResultType { get { int o = __p.__offset(6); return o != 0 ? (SCHALE.Common.FlatData.EventContentDiceRaceResultType)__p.bb.GetInt(o + __p.bb_pos) : SCHALE.Common.FlatData.EventContentDiceRaceResultType.DiceResult1; } }
  public long CostItemId { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public int CostItemAmount { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int DiceResult { get { int o = __p.__offset(12); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int Prob { get { int o = __p.__offset(14); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }

  public static Offset<SCHALE.Common.FlatData.EventContentDiceRaceProbExcel> CreateEventContentDiceRaceProbExcel(FlatBufferBuilder builder,
      long EventContentId = 0,
      SCHALE.Common.FlatData.EventContentDiceRaceResultType EventContentDiceRaceResultType = SCHALE.Common.FlatData.EventContentDiceRaceResultType.DiceResult1,
      long CostItemId = 0,
      int CostItemAmount = 0,
      int DiceResult = 0,
      int Prob = 0) {
    builder.StartTable(6);
    EventContentDiceRaceProbExcel.AddCostItemId(builder, CostItemId);
    EventContentDiceRaceProbExcel.AddEventContentId(builder, EventContentId);
    EventContentDiceRaceProbExcel.AddProb(builder, Prob);
    EventContentDiceRaceProbExcel.AddDiceResult(builder, DiceResult);
    EventContentDiceRaceProbExcel.AddCostItemAmount(builder, CostItemAmount);
    EventContentDiceRaceProbExcel.AddEventContentDiceRaceResultType(builder, EventContentDiceRaceResultType);
    return EventContentDiceRaceProbExcel.EndEventContentDiceRaceProbExcel(builder);
  }

  public static void StartEventContentDiceRaceProbExcel(FlatBufferBuilder builder) { builder.StartTable(6); }
  public static void AddEventContentId(FlatBufferBuilder builder, long eventContentId) { builder.AddLong(0, eventContentId, 0); }
  public static void AddEventContentDiceRaceResultType(FlatBufferBuilder builder, SCHALE.Common.FlatData.EventContentDiceRaceResultType eventContentDiceRaceResultType) { builder.AddInt(1, (int)eventContentDiceRaceResultType, 0); }
  public static void AddCostItemId(FlatBufferBuilder builder, long costItemId) { builder.AddLong(2, costItemId, 0); }
  public static void AddCostItemAmount(FlatBufferBuilder builder, int costItemAmount) { builder.AddInt(3, costItemAmount, 0); }
  public static void AddDiceResult(FlatBufferBuilder builder, int diceResult) { builder.AddInt(4, diceResult, 0); }
  public static void AddProb(FlatBufferBuilder builder, int prob) { builder.AddInt(5, prob, 0); }
  public static Offset<SCHALE.Common.FlatData.EventContentDiceRaceProbExcel> EndEventContentDiceRaceProbExcel(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<SCHALE.Common.FlatData.EventContentDiceRaceProbExcel>(o);
  }
  public EventContentDiceRaceProbExcelT UnPack() {
    var _o = new EventContentDiceRaceProbExcelT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(EventContentDiceRaceProbExcelT _o) {
		byte[] key = TableEncryptionService.CreateKey("EventContentDiceRaceProb");
    _o.EventContentId = TableEncryptionService.Convert(this.EventContentId, key);
    _o.EventContentDiceRaceResultType = TableEncryptionService.Convert(this.EventContentDiceRaceResultType, key);
    _o.CostItemId = TableEncryptionService.Convert(this.CostItemId, key);
    _o.CostItemAmount = TableEncryptionService.Convert(this.CostItemAmount, key);
    _o.DiceResult = TableEncryptionService.Convert(this.DiceResult, key);
    _o.Prob = TableEncryptionService.Convert(this.Prob, key);
  }
  public static Offset<SCHALE.Common.FlatData.EventContentDiceRaceProbExcel> Pack(FlatBufferBuilder builder, EventContentDiceRaceProbExcelT _o) {
    if (_o == null) return default(Offset<SCHALE.Common.FlatData.EventContentDiceRaceProbExcel>);
    return CreateEventContentDiceRaceProbExcel(
      builder,
      _o.EventContentId,
      _o.EventContentDiceRaceResultType,
      _o.CostItemId,
      _o.CostItemAmount,
      _o.DiceResult,
      _o.Prob);
  }
}

public class EventContentDiceRaceProbExcelT
{
  public long EventContentId { get; set; }
  public SCHALE.Common.FlatData.EventContentDiceRaceResultType EventContentDiceRaceResultType { get; set; }
  public long CostItemId { get; set; }
  public int CostItemAmount { get; set; }
  public int DiceResult { get; set; }
  public int Prob { get; set; }

  public EventContentDiceRaceProbExcelT() {
    this.EventContentId = 0;
    this.EventContentDiceRaceResultType = SCHALE.Common.FlatData.EventContentDiceRaceResultType.DiceResult1;
    this.CostItemId = 0;
    this.CostItemAmount = 0;
    this.DiceResult = 0;
    this.Prob = 0;
  }
}


static public class EventContentDiceRaceProbExcelVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*EventContentId*/, 8 /*long*/, 8, false)
      && verifier.VerifyField(tablePos, 6 /*EventContentDiceRaceResultType*/, 4 /*SCHALE.Common.FlatData.EventContentDiceRaceResultType*/, 4, false)
      && verifier.VerifyField(tablePos, 8 /*CostItemId*/, 8 /*long*/, 8, false)
      && verifier.VerifyField(tablePos, 10 /*CostItemAmount*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 12 /*DiceResult*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 14 /*Prob*/, 4 /*int*/, 4, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
