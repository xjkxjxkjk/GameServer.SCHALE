// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace SCHALE.Common.FlatData
{

using global::System;
using global::System.Collections.Generic;
using global::SCHALE.Common.Crypto;
using global::Google.FlatBuffers;

public struct ShopCashScenarioResourceInfoExcel : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_24_3_25(); }
  public static ShopCashScenarioResourceInfoExcel GetRootAsShopCashScenarioResourceInfoExcel(ByteBuffer _bb) { return GetRootAsShopCashScenarioResourceInfoExcel(_bb, new ShopCashScenarioResourceInfoExcel()); }
  public static ShopCashScenarioResourceInfoExcel GetRootAsShopCashScenarioResourceInfoExcel(ByteBuffer _bb, ShopCashScenarioResourceInfoExcel obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public ShopCashScenarioResourceInfoExcel __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public long ScenarioResrouceInfoId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public long ShopCashId { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public string IconPath { get { int o = __p.__offset(8); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetIconPathBytes() { return __p.__vector_as_span<byte>(8, 1); }
#else
  public ArraySegment<byte>? GetIconPathBytes() { return __p.__vector_as_arraysegment(8); }
#endif
  public byte[] GetIconPathArray() { return __p.__vector_as_array<byte>(8); }

  public static Offset<SCHALE.Common.FlatData.ShopCashScenarioResourceInfoExcel> CreateShopCashScenarioResourceInfoExcel(FlatBufferBuilder builder,
      long ScenarioResrouceInfoId = 0,
      long ShopCashId = 0,
      StringOffset IconPathOffset = default(StringOffset)) {
    builder.StartTable(3);
    ShopCashScenarioResourceInfoExcel.AddShopCashId(builder, ShopCashId);
    ShopCashScenarioResourceInfoExcel.AddScenarioResrouceInfoId(builder, ScenarioResrouceInfoId);
    ShopCashScenarioResourceInfoExcel.AddIconPath(builder, IconPathOffset);
    return ShopCashScenarioResourceInfoExcel.EndShopCashScenarioResourceInfoExcel(builder);
  }

  public static void StartShopCashScenarioResourceInfoExcel(FlatBufferBuilder builder) { builder.StartTable(3); }
  public static void AddScenarioResrouceInfoId(FlatBufferBuilder builder, long scenarioResrouceInfoId) { builder.AddLong(0, scenarioResrouceInfoId, 0); }
  public static void AddShopCashId(FlatBufferBuilder builder, long shopCashId) { builder.AddLong(1, shopCashId, 0); }
  public static void AddIconPath(FlatBufferBuilder builder, StringOffset iconPathOffset) { builder.AddOffset(2, iconPathOffset.Value, 0); }
  public static Offset<SCHALE.Common.FlatData.ShopCashScenarioResourceInfoExcel> EndShopCashScenarioResourceInfoExcel(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<SCHALE.Common.FlatData.ShopCashScenarioResourceInfoExcel>(o);
  }
  public ShopCashScenarioResourceInfoExcelT UnPack() {
    var _o = new ShopCashScenarioResourceInfoExcelT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(ShopCashScenarioResourceInfoExcelT _o) {
		byte[] key = TableEncryptionService.CreateKey("ShopCashScenarioResourceInfo");
    _o.ScenarioResrouceInfoId = TableEncryptionService.Convert(this.ScenarioResrouceInfoId, key);
    _o.ShopCashId = TableEncryptionService.Convert(this.ShopCashId, key);
    _o.IconPath = TableEncryptionService.Convert(this.IconPath, key);
  }
  public static Offset<SCHALE.Common.FlatData.ShopCashScenarioResourceInfoExcel> Pack(FlatBufferBuilder builder, ShopCashScenarioResourceInfoExcelT _o) {
    if (_o == null) return default(Offset<SCHALE.Common.FlatData.ShopCashScenarioResourceInfoExcel>);
    var _IconPath = _o.IconPath == null ? default(StringOffset) : builder.CreateString(_o.IconPath);
    return CreateShopCashScenarioResourceInfoExcel(
      builder,
      _o.ScenarioResrouceInfoId,
      _o.ShopCashId,
      _IconPath);
  }
}

public class ShopCashScenarioResourceInfoExcelT
{
  public long ScenarioResrouceInfoId { get; set; }
  public long ShopCashId { get; set; }
  public string IconPath { get; set; }

  public ShopCashScenarioResourceInfoExcelT() {
    this.ScenarioResrouceInfoId = 0;
    this.ShopCashId = 0;
    this.IconPath = null;
  }
}


static public class ShopCashScenarioResourceInfoExcelVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*ScenarioResrouceInfoId*/, 8 /*long*/, 8, false)
      && verifier.VerifyField(tablePos, 6 /*ShopCashId*/, 8 /*long*/, 8, false)
      && verifier.VerifyString(tablePos, 8 /*IconPath*/, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
