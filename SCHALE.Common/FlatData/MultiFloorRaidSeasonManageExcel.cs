// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace SCHALE.Common.FlatData
{

using global::System;
using global::System.Collections.Generic;
using global::SCHALE.Common.Crypto;
using global::Google.FlatBuffers;

public struct MultiFloorRaidSeasonManageExcel : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_24_3_25(); }
  public static MultiFloorRaidSeasonManageExcel GetRootAsMultiFloorRaidSeasonManageExcel(ByteBuffer _bb) { return GetRootAsMultiFloorRaidSeasonManageExcel(_bb, new MultiFloorRaidSeasonManageExcel()); }
  public static MultiFloorRaidSeasonManageExcel GetRootAsMultiFloorRaidSeasonManageExcel(ByteBuffer _bb, MultiFloorRaidSeasonManageExcel obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public MultiFloorRaidSeasonManageExcel __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public long SeasonId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public uint LobbyEnterScenario { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public bool ShowLobbyBanner { get { int o = __p.__offset(8); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  public string SeasonStartDate { get { int o = __p.__offset(10); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetSeasonStartDateBytes() { return __p.__vector_as_span<byte>(10, 1); }
#else
  public ArraySegment<byte>? GetSeasonStartDateBytes() { return __p.__vector_as_arraysegment(10); }
#endif
  public byte[] GetSeasonStartDateArray() { return __p.__vector_as_array<byte>(10); }
  public string SeasonEndDate { get { int o = __p.__offset(12); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetSeasonEndDateBytes() { return __p.__vector_as_span<byte>(12, 1); }
#else
  public ArraySegment<byte>? GetSeasonEndDateBytes() { return __p.__vector_as_arraysegment(12); }
#endif
  public byte[] GetSeasonEndDateArray() { return __p.__vector_as_array<byte>(12); }
  public string SettlementEndDate { get { int o = __p.__offset(14); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetSettlementEndDateBytes() { return __p.__vector_as_span<byte>(14, 1); }
#else
  public ArraySegment<byte>? GetSettlementEndDateBytes() { return __p.__vector_as_arraysegment(14); }
#endif
  public byte[] GetSettlementEndDateArray() { return __p.__vector_as_array<byte>(14); }
  public string OpenRaidBossGroupId { get { int o = __p.__offset(16); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetOpenRaidBossGroupIdBytes() { return __p.__vector_as_span<byte>(16, 1); }
#else
  public ArraySegment<byte>? GetOpenRaidBossGroupIdBytes() { return __p.__vector_as_arraysegment(16); }
#endif
  public byte[] GetOpenRaidBossGroupIdArray() { return __p.__vector_as_array<byte>(16); }
  public uint EnterScenarioKey { get { int o = __p.__offset(18); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public string LobbyImgPath { get { int o = __p.__offset(20); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetLobbyImgPathBytes() { return __p.__vector_as_span<byte>(20, 1); }
#else
  public ArraySegment<byte>? GetLobbyImgPathBytes() { return __p.__vector_as_arraysegment(20); }
#endif
  public byte[] GetLobbyImgPathArray() { return __p.__vector_as_array<byte>(20); }
  public string LevelImgPath { get { int o = __p.__offset(22); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetLevelImgPathBytes() { return __p.__vector_as_span<byte>(22, 1); }
#else
  public ArraySegment<byte>? GetLevelImgPathBytes() { return __p.__vector_as_arraysegment(22); }
#endif
  public byte[] GetLevelImgPathArray() { return __p.__vector_as_array<byte>(22); }

  public static Offset<SCHALE.Common.FlatData.MultiFloorRaidSeasonManageExcel> CreateMultiFloorRaidSeasonManageExcel(FlatBufferBuilder builder,
      long SeasonId = 0,
      uint LobbyEnterScenario = 0,
      bool ShowLobbyBanner = false,
      StringOffset SeasonStartDateOffset = default(StringOffset),
      StringOffset SeasonEndDateOffset = default(StringOffset),
      StringOffset SettlementEndDateOffset = default(StringOffset),
      StringOffset OpenRaidBossGroupIdOffset = default(StringOffset),
      uint EnterScenarioKey = 0,
      StringOffset LobbyImgPathOffset = default(StringOffset),
      StringOffset LevelImgPathOffset = default(StringOffset)) {
    builder.StartTable(10);
    MultiFloorRaidSeasonManageExcel.AddSeasonId(builder, SeasonId);
    MultiFloorRaidSeasonManageExcel.AddLevelImgPath(builder, LevelImgPathOffset);
    MultiFloorRaidSeasonManageExcel.AddLobbyImgPath(builder, LobbyImgPathOffset);
    MultiFloorRaidSeasonManageExcel.AddEnterScenarioKey(builder, EnterScenarioKey);
    MultiFloorRaidSeasonManageExcel.AddOpenRaidBossGroupId(builder, OpenRaidBossGroupIdOffset);
    MultiFloorRaidSeasonManageExcel.AddSettlementEndDate(builder, SettlementEndDateOffset);
    MultiFloorRaidSeasonManageExcel.AddSeasonEndDate(builder, SeasonEndDateOffset);
    MultiFloorRaidSeasonManageExcel.AddSeasonStartDate(builder, SeasonStartDateOffset);
    MultiFloorRaidSeasonManageExcel.AddLobbyEnterScenario(builder, LobbyEnterScenario);
    MultiFloorRaidSeasonManageExcel.AddShowLobbyBanner(builder, ShowLobbyBanner);
    return MultiFloorRaidSeasonManageExcel.EndMultiFloorRaidSeasonManageExcel(builder);
  }

  public static void StartMultiFloorRaidSeasonManageExcel(FlatBufferBuilder builder) { builder.StartTable(10); }
  public static void AddSeasonId(FlatBufferBuilder builder, long seasonId) { builder.AddLong(0, seasonId, 0); }
  public static void AddLobbyEnterScenario(FlatBufferBuilder builder, uint lobbyEnterScenario) { builder.AddUint(1, lobbyEnterScenario, 0); }
  public static void AddShowLobbyBanner(FlatBufferBuilder builder, bool showLobbyBanner) { builder.AddBool(2, showLobbyBanner, false); }
  public static void AddSeasonStartDate(FlatBufferBuilder builder, StringOffset seasonStartDateOffset) { builder.AddOffset(3, seasonStartDateOffset.Value, 0); }
  public static void AddSeasonEndDate(FlatBufferBuilder builder, StringOffset seasonEndDateOffset) { builder.AddOffset(4, seasonEndDateOffset.Value, 0); }
  public static void AddSettlementEndDate(FlatBufferBuilder builder, StringOffset settlementEndDateOffset) { builder.AddOffset(5, settlementEndDateOffset.Value, 0); }
  public static void AddOpenRaidBossGroupId(FlatBufferBuilder builder, StringOffset openRaidBossGroupIdOffset) { builder.AddOffset(6, openRaidBossGroupIdOffset.Value, 0); }
  public static void AddEnterScenarioKey(FlatBufferBuilder builder, uint enterScenarioKey) { builder.AddUint(7, enterScenarioKey, 0); }
  public static void AddLobbyImgPath(FlatBufferBuilder builder, StringOffset lobbyImgPathOffset) { builder.AddOffset(8, lobbyImgPathOffset.Value, 0); }
  public static void AddLevelImgPath(FlatBufferBuilder builder, StringOffset levelImgPathOffset) { builder.AddOffset(9, levelImgPathOffset.Value, 0); }
  public static Offset<SCHALE.Common.FlatData.MultiFloorRaidSeasonManageExcel> EndMultiFloorRaidSeasonManageExcel(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<SCHALE.Common.FlatData.MultiFloorRaidSeasonManageExcel>(o);
  }
  public MultiFloorRaidSeasonManageExcelT UnPack() {
    var _o = new MultiFloorRaidSeasonManageExcelT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(MultiFloorRaidSeasonManageExcelT _o) {
		byte[] key = TableEncryptionService.CreateKey("MultiFloorRaidSeasonManage");
    _o.SeasonId = TableEncryptionService.Convert(this.SeasonId, key);
    _o.LobbyEnterScenario = TableEncryptionService.Convert(this.LobbyEnterScenario, key);
    _o.ShowLobbyBanner = TableEncryptionService.Convert(this.ShowLobbyBanner, key);
    _o.SeasonStartDate = TableEncryptionService.Convert(this.SeasonStartDate, key);
    _o.SeasonEndDate = TableEncryptionService.Convert(this.SeasonEndDate, key);
    _o.SettlementEndDate = TableEncryptionService.Convert(this.SettlementEndDate, key);
    _o.OpenRaidBossGroupId = TableEncryptionService.Convert(this.OpenRaidBossGroupId, key);
    _o.EnterScenarioKey = TableEncryptionService.Convert(this.EnterScenarioKey, key);
    _o.LobbyImgPath = TableEncryptionService.Convert(this.LobbyImgPath, key);
    _o.LevelImgPath = TableEncryptionService.Convert(this.LevelImgPath, key);
  }
  public static Offset<SCHALE.Common.FlatData.MultiFloorRaidSeasonManageExcel> Pack(FlatBufferBuilder builder, MultiFloorRaidSeasonManageExcelT _o) {
    if (_o == null) return default(Offset<SCHALE.Common.FlatData.MultiFloorRaidSeasonManageExcel>);
    var _SeasonStartDate = _o.SeasonStartDate == null ? default(StringOffset) : builder.CreateString(_o.SeasonStartDate);
    var _SeasonEndDate = _o.SeasonEndDate == null ? default(StringOffset) : builder.CreateString(_o.SeasonEndDate);
    var _SettlementEndDate = _o.SettlementEndDate == null ? default(StringOffset) : builder.CreateString(_o.SettlementEndDate);
    var _OpenRaidBossGroupId = _o.OpenRaidBossGroupId == null ? default(StringOffset) : builder.CreateString(_o.OpenRaidBossGroupId);
    var _LobbyImgPath = _o.LobbyImgPath == null ? default(StringOffset) : builder.CreateString(_o.LobbyImgPath);
    var _LevelImgPath = _o.LevelImgPath == null ? default(StringOffset) : builder.CreateString(_o.LevelImgPath);
    return CreateMultiFloorRaidSeasonManageExcel(
      builder,
      _o.SeasonId,
      _o.LobbyEnterScenario,
      _o.ShowLobbyBanner,
      _SeasonStartDate,
      _SeasonEndDate,
      _SettlementEndDate,
      _OpenRaidBossGroupId,
      _o.EnterScenarioKey,
      _LobbyImgPath,
      _LevelImgPath);
  }
}

public class MultiFloorRaidSeasonManageExcelT
{
  public long SeasonId { get; set; }
  public uint LobbyEnterScenario { get; set; }
  public bool ShowLobbyBanner { get; set; }
  public string SeasonStartDate { get; set; }
  public string SeasonEndDate { get; set; }
  public string SettlementEndDate { get; set; }
  public string OpenRaidBossGroupId { get; set; }
  public uint EnterScenarioKey { get; set; }
  public string LobbyImgPath { get; set; }
  public string LevelImgPath { get; set; }

  public MultiFloorRaidSeasonManageExcelT() {
    this.SeasonId = 0;
    this.LobbyEnterScenario = 0;
    this.ShowLobbyBanner = false;
    this.SeasonStartDate = null;
    this.SeasonEndDate = null;
    this.SettlementEndDate = null;
    this.OpenRaidBossGroupId = null;
    this.EnterScenarioKey = 0;
    this.LobbyImgPath = null;
    this.LevelImgPath = null;
  }
}


static public class MultiFloorRaidSeasonManageExcelVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*SeasonId*/, 8 /*long*/, 8, false)
      && verifier.VerifyField(tablePos, 6 /*LobbyEnterScenario*/, 4 /*uint*/, 4, false)
      && verifier.VerifyField(tablePos, 8 /*ShowLobbyBanner*/, 1 /*bool*/, 1, false)
      && verifier.VerifyString(tablePos, 10 /*SeasonStartDate*/, false)
      && verifier.VerifyString(tablePos, 12 /*SeasonEndDate*/, false)
      && verifier.VerifyString(tablePos, 14 /*SettlementEndDate*/, false)
      && verifier.VerifyString(tablePos, 16 /*OpenRaidBossGroupId*/, false)
      && verifier.VerifyField(tablePos, 18 /*EnterScenarioKey*/, 4 /*uint*/, 4, false)
      && verifier.VerifyString(tablePos, 20 /*LobbyImgPath*/, false)
      && verifier.VerifyString(tablePos, 22 /*LevelImgPath*/, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
