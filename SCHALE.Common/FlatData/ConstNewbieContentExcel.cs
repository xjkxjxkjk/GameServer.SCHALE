// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace SCHALE.Common.FlatData
{

using global::System;
using global::System.Collections.Generic;
using global::SCHALE.Common.Crypto;
using global::Google.FlatBuffers;

public struct ConstNewbieContentExcel : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_24_3_25(); }
  public static ConstNewbieContentExcel GetRootAsConstNewbieContentExcel(ByteBuffer _bb) { return GetRootAsConstNewbieContentExcel(_bb, new ConstNewbieContentExcel()); }
  public static ConstNewbieContentExcel GetRootAsConstNewbieContentExcel(ByteBuffer _bb, ConstNewbieContentExcel obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public ConstNewbieContentExcel __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public string NewbieGachaReleaseDate { get { int o = __p.__offset(4); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetNewbieGachaReleaseDateBytes() { return __p.__vector_as_span<byte>(4, 1); }
#else
  public ArraySegment<byte>? GetNewbieGachaReleaseDateBytes() { return __p.__vector_as_arraysegment(4); }
#endif
  public byte[] GetNewbieGachaReleaseDateArray() { return __p.__vector_as_array<byte>(4); }
  public int NewbieGachaCheckDays { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int NewbieGachaTokenGraceTime { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public string NewbieAttendanceReleaseDate { get { int o = __p.__offset(10); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetNewbieAttendanceReleaseDateBytes() { return __p.__vector_as_span<byte>(10, 1); }
#else
  public ArraySegment<byte>? GetNewbieAttendanceReleaseDateBytes() { return __p.__vector_as_arraysegment(10); }
#endif
  public byte[] GetNewbieAttendanceReleaseDateArray() { return __p.__vector_as_array<byte>(10); }
  public int NewbieAttendanceStartableEndDay { get { int o = __p.__offset(12); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int NewbieAttendanceEndDay { get { int o = __p.__offset(14); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }

  public static Offset<SCHALE.Common.FlatData.ConstNewbieContentExcel> CreateConstNewbieContentExcel(FlatBufferBuilder builder,
      StringOffset NewbieGachaReleaseDateOffset = default(StringOffset),
      int NewbieGachaCheckDays = 0,
      int NewbieGachaTokenGraceTime = 0,
      StringOffset NewbieAttendanceReleaseDateOffset = default(StringOffset),
      int NewbieAttendanceStartableEndDay = 0,
      int NewbieAttendanceEndDay = 0) {
    builder.StartTable(6);
    ConstNewbieContentExcel.AddNewbieAttendanceEndDay(builder, NewbieAttendanceEndDay);
    ConstNewbieContentExcel.AddNewbieAttendanceStartableEndDay(builder, NewbieAttendanceStartableEndDay);
    ConstNewbieContentExcel.AddNewbieAttendanceReleaseDate(builder, NewbieAttendanceReleaseDateOffset);
    ConstNewbieContentExcel.AddNewbieGachaTokenGraceTime(builder, NewbieGachaTokenGraceTime);
    ConstNewbieContentExcel.AddNewbieGachaCheckDays(builder, NewbieGachaCheckDays);
    ConstNewbieContentExcel.AddNewbieGachaReleaseDate(builder, NewbieGachaReleaseDateOffset);
    return ConstNewbieContentExcel.EndConstNewbieContentExcel(builder);
  }

  public static void StartConstNewbieContentExcel(FlatBufferBuilder builder) { builder.StartTable(6); }
  public static void AddNewbieGachaReleaseDate(FlatBufferBuilder builder, StringOffset newbieGachaReleaseDateOffset) { builder.AddOffset(0, newbieGachaReleaseDateOffset.Value, 0); }
  public static void AddNewbieGachaCheckDays(FlatBufferBuilder builder, int newbieGachaCheckDays) { builder.AddInt(1, newbieGachaCheckDays, 0); }
  public static void AddNewbieGachaTokenGraceTime(FlatBufferBuilder builder, int newbieGachaTokenGraceTime) { builder.AddInt(2, newbieGachaTokenGraceTime, 0); }
  public static void AddNewbieAttendanceReleaseDate(FlatBufferBuilder builder, StringOffset newbieAttendanceReleaseDateOffset) { builder.AddOffset(3, newbieAttendanceReleaseDateOffset.Value, 0); }
  public static void AddNewbieAttendanceStartableEndDay(FlatBufferBuilder builder, int newbieAttendanceStartableEndDay) { builder.AddInt(4, newbieAttendanceStartableEndDay, 0); }
  public static void AddNewbieAttendanceEndDay(FlatBufferBuilder builder, int newbieAttendanceEndDay) { builder.AddInt(5, newbieAttendanceEndDay, 0); }
  public static Offset<SCHALE.Common.FlatData.ConstNewbieContentExcel> EndConstNewbieContentExcel(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<SCHALE.Common.FlatData.ConstNewbieContentExcel>(o);
  }
  public ConstNewbieContentExcelT UnPack() {
    var _o = new ConstNewbieContentExcelT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(ConstNewbieContentExcelT _o) {
		byte[] key = TableEncryptionService.CreateKey("ConstNewbieContent");
    _o.NewbieGachaReleaseDate = TableEncryptionService.Convert(this.NewbieGachaReleaseDate, key);
    _o.NewbieGachaCheckDays = TableEncryptionService.Convert(this.NewbieGachaCheckDays, key);
    _o.NewbieGachaTokenGraceTime = TableEncryptionService.Convert(this.NewbieGachaTokenGraceTime, key);
    _o.NewbieAttendanceReleaseDate = TableEncryptionService.Convert(this.NewbieAttendanceReleaseDate, key);
    _o.NewbieAttendanceStartableEndDay = TableEncryptionService.Convert(this.NewbieAttendanceStartableEndDay, key);
    _o.NewbieAttendanceEndDay = TableEncryptionService.Convert(this.NewbieAttendanceEndDay, key);
  }
  public static Offset<SCHALE.Common.FlatData.ConstNewbieContentExcel> Pack(FlatBufferBuilder builder, ConstNewbieContentExcelT _o) {
    if (_o == null) return default(Offset<SCHALE.Common.FlatData.ConstNewbieContentExcel>);
    var _NewbieGachaReleaseDate = _o.NewbieGachaReleaseDate == null ? default(StringOffset) : builder.CreateString(_o.NewbieGachaReleaseDate);
    var _NewbieAttendanceReleaseDate = _o.NewbieAttendanceReleaseDate == null ? default(StringOffset) : builder.CreateString(_o.NewbieAttendanceReleaseDate);
    return CreateConstNewbieContentExcel(
      builder,
      _NewbieGachaReleaseDate,
      _o.NewbieGachaCheckDays,
      _o.NewbieGachaTokenGraceTime,
      _NewbieAttendanceReleaseDate,
      _o.NewbieAttendanceStartableEndDay,
      _o.NewbieAttendanceEndDay);
  }
}

public class ConstNewbieContentExcelT
{
  public string NewbieGachaReleaseDate { get; set; }
  public int NewbieGachaCheckDays { get; set; }
  public int NewbieGachaTokenGraceTime { get; set; }
  public string NewbieAttendanceReleaseDate { get; set; }
  public int NewbieAttendanceStartableEndDay { get; set; }
  public int NewbieAttendanceEndDay { get; set; }

  public ConstNewbieContentExcelT() {
    this.NewbieGachaReleaseDate = null;
    this.NewbieGachaCheckDays = 0;
    this.NewbieGachaTokenGraceTime = 0;
    this.NewbieAttendanceReleaseDate = null;
    this.NewbieAttendanceStartableEndDay = 0;
    this.NewbieAttendanceEndDay = 0;
  }
}


static public class ConstNewbieContentExcelVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyString(tablePos, 4 /*NewbieGachaReleaseDate*/, false)
      && verifier.VerifyField(tablePos, 6 /*NewbieGachaCheckDays*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 8 /*NewbieGachaTokenGraceTime*/, 4 /*int*/, 4, false)
      && verifier.VerifyString(tablePos, 10 /*NewbieAttendanceReleaseDate*/, false)
      && verifier.VerifyField(tablePos, 12 /*NewbieAttendanceStartableEndDay*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 14 /*NewbieAttendanceEndDay*/, 4 /*int*/, 4, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
