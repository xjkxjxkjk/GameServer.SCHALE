// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace SCHALE.Common.FlatData
{

using global::System;
using global::System.Collections.Generic;
using global::SCHALE.Common.Crypto;
using global::Google.FlatBuffers;

public struct EventContentFortuneGachaModifyExcel : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_24_3_25(); }
  public static EventContentFortuneGachaModifyExcel GetRootAsEventContentFortuneGachaModifyExcel(ByteBuffer _bb) { return GetRootAsEventContentFortuneGachaModifyExcel(_bb, new EventContentFortuneGachaModifyExcel()); }
  public static EventContentFortuneGachaModifyExcel GetRootAsEventContentFortuneGachaModifyExcel(ByteBuffer _bb, EventContentFortuneGachaModifyExcel obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public EventContentFortuneGachaModifyExcel __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int EventContentId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int TargetGrade { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int ProbModifyStartCount { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public string UsePrefabName { get { int o = __p.__offset(10); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetUsePrefabNameBytes() { return __p.__vector_as_span<byte>(10, 1); }
#else
  public ArraySegment<byte>? GetUsePrefabNameBytes() { return __p.__vector_as_arraysegment(10); }
#endif
  public byte[] GetUsePrefabNameArray() { return __p.__vector_as_array<byte>(10); }
  public string BucketImagePath { get { int o = __p.__offset(12); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetBucketImagePathBytes() { return __p.__vector_as_span<byte>(12, 1); }
#else
  public ArraySegment<byte>? GetBucketImagePathBytes() { return __p.__vector_as_arraysegment(12); }
#endif
  public byte[] GetBucketImagePathArray() { return __p.__vector_as_array<byte>(12); }
  public string ShopBgImagePath { get { int o = __p.__offset(14); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetShopBgImagePathBytes() { return __p.__vector_as_span<byte>(14, 1); }
#else
  public ArraySegment<byte>? GetShopBgImagePathBytes() { return __p.__vector_as_arraysegment(14); }
#endif
  public byte[] GetShopBgImagePathArray() { return __p.__vector_as_array<byte>(14); }
  public string TitleLocalizeKey { get { int o = __p.__offset(16); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetTitleLocalizeKeyBytes() { return __p.__vector_as_span<byte>(16, 1); }
#else
  public ArraySegment<byte>? GetTitleLocalizeKeyBytes() { return __p.__vector_as_arraysegment(16); }
#endif
  public byte[] GetTitleLocalizeKeyArray() { return __p.__vector_as_array<byte>(16); }

  public static Offset<SCHALE.Common.FlatData.EventContentFortuneGachaModifyExcel> CreateEventContentFortuneGachaModifyExcel(FlatBufferBuilder builder,
      int EventContentId = 0,
      int TargetGrade = 0,
      int ProbModifyStartCount = 0,
      StringOffset UsePrefabNameOffset = default(StringOffset),
      StringOffset BucketImagePathOffset = default(StringOffset),
      StringOffset ShopBgImagePathOffset = default(StringOffset),
      StringOffset TitleLocalizeKeyOffset = default(StringOffset)) {
    builder.StartTable(7);
    EventContentFortuneGachaModifyExcel.AddTitleLocalizeKey(builder, TitleLocalizeKeyOffset);
    EventContentFortuneGachaModifyExcel.AddShopBgImagePath(builder, ShopBgImagePathOffset);
    EventContentFortuneGachaModifyExcel.AddBucketImagePath(builder, BucketImagePathOffset);
    EventContentFortuneGachaModifyExcel.AddUsePrefabName(builder, UsePrefabNameOffset);
    EventContentFortuneGachaModifyExcel.AddProbModifyStartCount(builder, ProbModifyStartCount);
    EventContentFortuneGachaModifyExcel.AddTargetGrade(builder, TargetGrade);
    EventContentFortuneGachaModifyExcel.AddEventContentId(builder, EventContentId);
    return EventContentFortuneGachaModifyExcel.EndEventContentFortuneGachaModifyExcel(builder);
  }

  public static void StartEventContentFortuneGachaModifyExcel(FlatBufferBuilder builder) { builder.StartTable(7); }
  public static void AddEventContentId(FlatBufferBuilder builder, int eventContentId) { builder.AddInt(0, eventContentId, 0); }
  public static void AddTargetGrade(FlatBufferBuilder builder, int targetGrade) { builder.AddInt(1, targetGrade, 0); }
  public static void AddProbModifyStartCount(FlatBufferBuilder builder, int probModifyStartCount) { builder.AddInt(2, probModifyStartCount, 0); }
  public static void AddUsePrefabName(FlatBufferBuilder builder, StringOffset usePrefabNameOffset) { builder.AddOffset(3, usePrefabNameOffset.Value, 0); }
  public static void AddBucketImagePath(FlatBufferBuilder builder, StringOffset bucketImagePathOffset) { builder.AddOffset(4, bucketImagePathOffset.Value, 0); }
  public static void AddShopBgImagePath(FlatBufferBuilder builder, StringOffset shopBgImagePathOffset) { builder.AddOffset(5, shopBgImagePathOffset.Value, 0); }
  public static void AddTitleLocalizeKey(FlatBufferBuilder builder, StringOffset titleLocalizeKeyOffset) { builder.AddOffset(6, titleLocalizeKeyOffset.Value, 0); }
  public static Offset<SCHALE.Common.FlatData.EventContentFortuneGachaModifyExcel> EndEventContentFortuneGachaModifyExcel(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<SCHALE.Common.FlatData.EventContentFortuneGachaModifyExcel>(o);
  }
  public EventContentFortuneGachaModifyExcelT UnPack() {
    var _o = new EventContentFortuneGachaModifyExcelT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(EventContentFortuneGachaModifyExcelT _o) {
		byte[] key = TableEncryptionService.CreateKey("EventContentFortuneGachaModify");
    _o.EventContentId = TableEncryptionService.Convert(this.EventContentId, key);
    _o.TargetGrade = TableEncryptionService.Convert(this.TargetGrade, key);
    _o.ProbModifyStartCount = TableEncryptionService.Convert(this.ProbModifyStartCount, key);
    _o.UsePrefabName = TableEncryptionService.Convert(this.UsePrefabName, key);
    _o.BucketImagePath = TableEncryptionService.Convert(this.BucketImagePath, key);
    _o.ShopBgImagePath = TableEncryptionService.Convert(this.ShopBgImagePath, key);
    _o.TitleLocalizeKey = TableEncryptionService.Convert(this.TitleLocalizeKey, key);
  }
  public static Offset<SCHALE.Common.FlatData.EventContentFortuneGachaModifyExcel> Pack(FlatBufferBuilder builder, EventContentFortuneGachaModifyExcelT _o) {
    if (_o == null) return default(Offset<SCHALE.Common.FlatData.EventContentFortuneGachaModifyExcel>);
    var _UsePrefabName = _o.UsePrefabName == null ? default(StringOffset) : builder.CreateString(_o.UsePrefabName);
    var _BucketImagePath = _o.BucketImagePath == null ? default(StringOffset) : builder.CreateString(_o.BucketImagePath);
    var _ShopBgImagePath = _o.ShopBgImagePath == null ? default(StringOffset) : builder.CreateString(_o.ShopBgImagePath);
    var _TitleLocalizeKey = _o.TitleLocalizeKey == null ? default(StringOffset) : builder.CreateString(_o.TitleLocalizeKey);
    return CreateEventContentFortuneGachaModifyExcel(
      builder,
      _o.EventContentId,
      _o.TargetGrade,
      _o.ProbModifyStartCount,
      _UsePrefabName,
      _BucketImagePath,
      _ShopBgImagePath,
      _TitleLocalizeKey);
  }
}

public class EventContentFortuneGachaModifyExcelT
{
  public int EventContentId { get; set; }
  public int TargetGrade { get; set; }
  public int ProbModifyStartCount { get; set; }
  public string UsePrefabName { get; set; }
  public string BucketImagePath { get; set; }
  public string ShopBgImagePath { get; set; }
  public string TitleLocalizeKey { get; set; }

  public EventContentFortuneGachaModifyExcelT() {
    this.EventContentId = 0;
    this.TargetGrade = 0;
    this.ProbModifyStartCount = 0;
    this.UsePrefabName = null;
    this.BucketImagePath = null;
    this.ShopBgImagePath = null;
    this.TitleLocalizeKey = null;
  }
}


static public class EventContentFortuneGachaModifyExcelVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*EventContentId*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 6 /*TargetGrade*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 8 /*ProbModifyStartCount*/, 4 /*int*/, 4, false)
      && verifier.VerifyString(tablePos, 10 /*UsePrefabName*/, false)
      && verifier.VerifyString(tablePos, 12 /*BucketImagePath*/, false)
      && verifier.VerifyString(tablePos, 14 /*ShopBgImagePath*/, false)
      && verifier.VerifyString(tablePos, 16 /*TitleLocalizeKey*/, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
