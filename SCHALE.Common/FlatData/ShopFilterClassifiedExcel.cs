// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace SCHALE.Common.FlatData
{

using global::System;
using global::System.Collections.Generic;
using global::SCHALE.Common.Crypto;
using global::Google.FlatBuffers;

public struct ShopFilterClassifiedExcel : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_24_3_25(); }
  public static ShopFilterClassifiedExcel GetRootAsShopFilterClassifiedExcel(ByteBuffer _bb) { return GetRootAsShopFilterClassifiedExcel(_bb, new ShopFilterClassifiedExcel()); }
  public static ShopFilterClassifiedExcel GetRootAsShopFilterClassifiedExcel(ByteBuffer _bb, ShopFilterClassifiedExcel obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public ShopFilterClassifiedExcel __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public long Id { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public SCHALE.Common.FlatData.ShopCategoryType CategoryType { get { int o = __p.__offset(6); return o != 0 ? (SCHALE.Common.FlatData.ShopCategoryType)__p.bb.GetInt(o + __p.bb_pos) : SCHALE.Common.FlatData.ShopCategoryType.General; } }
  public SCHALE.Common.FlatData.ParcelType ConsumeParcelType { get { int o = __p.__offset(8); return o != 0 ? (SCHALE.Common.FlatData.ParcelType)__p.bb.GetInt(o + __p.bb_pos) : SCHALE.Common.FlatData.ParcelType.None; } }
  public long ConsumeParcelId { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public SCHALE.Common.FlatData.ShopFilterType ShopFilterType { get { int o = __p.__offset(12); return o != 0 ? (SCHALE.Common.FlatData.ShopFilterType)__p.bb.GetInt(o + __p.bb_pos) : SCHALE.Common.FlatData.ShopFilterType.GachaTicket; } }
  public long GoodsId { get { int o = __p.__offset(14); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }

  public static Offset<SCHALE.Common.FlatData.ShopFilterClassifiedExcel> CreateShopFilterClassifiedExcel(FlatBufferBuilder builder,
      long Id = 0,
      SCHALE.Common.FlatData.ShopCategoryType CategoryType = SCHALE.Common.FlatData.ShopCategoryType.General,
      SCHALE.Common.FlatData.ParcelType ConsumeParcelType = SCHALE.Common.FlatData.ParcelType.None,
      long ConsumeParcelId = 0,
      SCHALE.Common.FlatData.ShopFilterType ShopFilterType = SCHALE.Common.FlatData.ShopFilterType.GachaTicket,
      long GoodsId = 0) {
    builder.StartTable(6);
    ShopFilterClassifiedExcel.AddGoodsId(builder, GoodsId);
    ShopFilterClassifiedExcel.AddConsumeParcelId(builder, ConsumeParcelId);
    ShopFilterClassifiedExcel.AddId(builder, Id);
    ShopFilterClassifiedExcel.AddShopFilterType(builder, ShopFilterType);
    ShopFilterClassifiedExcel.AddConsumeParcelType(builder, ConsumeParcelType);
    ShopFilterClassifiedExcel.AddCategoryType(builder, CategoryType);
    return ShopFilterClassifiedExcel.EndShopFilterClassifiedExcel(builder);
  }

  public static void StartShopFilterClassifiedExcel(FlatBufferBuilder builder) { builder.StartTable(6); }
  public static void AddId(FlatBufferBuilder builder, long id) { builder.AddLong(0, id, 0); }
  public static void AddCategoryType(FlatBufferBuilder builder, SCHALE.Common.FlatData.ShopCategoryType categoryType) { builder.AddInt(1, (int)categoryType, 0); }
  public static void AddConsumeParcelType(FlatBufferBuilder builder, SCHALE.Common.FlatData.ParcelType consumeParcelType) { builder.AddInt(2, (int)consumeParcelType, 0); }
  public static void AddConsumeParcelId(FlatBufferBuilder builder, long consumeParcelId) { builder.AddLong(3, consumeParcelId, 0); }
  public static void AddShopFilterType(FlatBufferBuilder builder, SCHALE.Common.FlatData.ShopFilterType shopFilterType) { builder.AddInt(4, (int)shopFilterType, 0); }
  public static void AddGoodsId(FlatBufferBuilder builder, long goodsId) { builder.AddLong(5, goodsId, 0); }
  public static Offset<SCHALE.Common.FlatData.ShopFilterClassifiedExcel> EndShopFilterClassifiedExcel(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<SCHALE.Common.FlatData.ShopFilterClassifiedExcel>(o);
  }
  public ShopFilterClassifiedExcelT UnPack() {
    var _o = new ShopFilterClassifiedExcelT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(ShopFilterClassifiedExcelT _o) {
		byte[] key = TableEncryptionService.CreateKey("ShopFilterClassified");
    _o.Id = TableEncryptionService.Convert(this.Id, key);
    _o.CategoryType = TableEncryptionService.Convert(this.CategoryType, key);
    _o.ConsumeParcelType = TableEncryptionService.Convert(this.ConsumeParcelType, key);
    _o.ConsumeParcelId = TableEncryptionService.Convert(this.ConsumeParcelId, key);
    _o.ShopFilterType = TableEncryptionService.Convert(this.ShopFilterType, key);
    _o.GoodsId = TableEncryptionService.Convert(this.GoodsId, key);
  }
  public static Offset<SCHALE.Common.FlatData.ShopFilterClassifiedExcel> Pack(FlatBufferBuilder builder, ShopFilterClassifiedExcelT _o) {
    if (_o == null) return default(Offset<SCHALE.Common.FlatData.ShopFilterClassifiedExcel>);
    return CreateShopFilterClassifiedExcel(
      builder,
      _o.Id,
      _o.CategoryType,
      _o.ConsumeParcelType,
      _o.ConsumeParcelId,
      _o.ShopFilterType,
      _o.GoodsId);
  }
}

public class ShopFilterClassifiedExcelT
{
  public long Id { get; set; }
  public SCHALE.Common.FlatData.ShopCategoryType CategoryType { get; set; }
  public SCHALE.Common.FlatData.ParcelType ConsumeParcelType { get; set; }
  public long ConsumeParcelId { get; set; }
  public SCHALE.Common.FlatData.ShopFilterType ShopFilterType { get; set; }
  public long GoodsId { get; set; }

  public ShopFilterClassifiedExcelT() {
    this.Id = 0;
    this.CategoryType = SCHALE.Common.FlatData.ShopCategoryType.General;
    this.ConsumeParcelType = SCHALE.Common.FlatData.ParcelType.None;
    this.ConsumeParcelId = 0;
    this.ShopFilterType = SCHALE.Common.FlatData.ShopFilterType.GachaTicket;
    this.GoodsId = 0;
  }
}


static public class ShopFilterClassifiedExcelVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*Id*/, 8 /*long*/, 8, false)
      && verifier.VerifyField(tablePos, 6 /*CategoryType*/, 4 /*SCHALE.Common.FlatData.ShopCategoryType*/, 4, false)
      && verifier.VerifyField(tablePos, 8 /*ConsumeParcelType*/, 4 /*SCHALE.Common.FlatData.ParcelType*/, 4, false)
      && verifier.VerifyField(tablePos, 10 /*ConsumeParcelId*/, 8 /*long*/, 8, false)
      && verifier.VerifyField(tablePos, 12 /*ShopFilterType*/, 4 /*SCHALE.Common.FlatData.ShopFilterType*/, 4, false)
      && verifier.VerifyField(tablePos, 14 /*GoodsId*/, 8 /*long*/, 8, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
