// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace SCHALE.Common.FlatData
{

using global::System;
using global::System.Collections.Generic;
using global::SCHALE.Common.Crypto;
using global::Google.FlatBuffers;

public struct CharacterAcademyTagsExcel : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_24_3_25(); }
  public static CharacterAcademyTagsExcel GetRootAsCharacterAcademyTagsExcel(ByteBuffer _bb) { return GetRootAsCharacterAcademyTagsExcel(_bb, new CharacterAcademyTagsExcel()); }
  public static CharacterAcademyTagsExcel GetRootAsCharacterAcademyTagsExcel(ByteBuffer _bb, CharacterAcademyTagsExcel obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public CharacterAcademyTagsExcel __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public long Id { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public SCHALE.Common.FlatData.Tag FavorTags(int j) { int o = __p.__offset(6); return o != 0 ? (SCHALE.Common.FlatData.Tag)__p.bb.GetInt(__p.__vector(o) + j * 4) : (SCHALE.Common.FlatData.Tag)0; }
  public int FavorTagsLength { get { int o = __p.__offset(6); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<SCHALE.Common.FlatData.Tag> GetFavorTagsBytes() { return __p.__vector_as_span<SCHALE.Common.FlatData.Tag>(6, 4); }
#else
  public ArraySegment<byte>? GetFavorTagsBytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public SCHALE.Common.FlatData.Tag[] GetFavorTagsArray() { int o = __p.__offset(6); if (o == 0) return null; int p = __p.__vector(o); int l = __p.__vector_len(o); SCHALE.Common.FlatData.Tag[] a = new SCHALE.Common.FlatData.Tag[l]; for (int i = 0; i < l; i++) { a[i] = (SCHALE.Common.FlatData.Tag)__p.bb.GetInt(p + i * 4); } return a; }
  public SCHALE.Common.FlatData.Tag FavorItemTags(int j) { int o = __p.__offset(8); return o != 0 ? (SCHALE.Common.FlatData.Tag)__p.bb.GetInt(__p.__vector(o) + j * 4) : (SCHALE.Common.FlatData.Tag)0; }
  public int FavorItemTagsLength { get { int o = __p.__offset(8); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<SCHALE.Common.FlatData.Tag> GetFavorItemTagsBytes() { return __p.__vector_as_span<SCHALE.Common.FlatData.Tag>(8, 4); }
#else
  public ArraySegment<byte>? GetFavorItemTagsBytes() { return __p.__vector_as_arraysegment(8); }
#endif
  public SCHALE.Common.FlatData.Tag[] GetFavorItemTagsArray() { int o = __p.__offset(8); if (o == 0) return null; int p = __p.__vector(o); int l = __p.__vector_len(o); SCHALE.Common.FlatData.Tag[] a = new SCHALE.Common.FlatData.Tag[l]; for (int i = 0; i < l; i++) { a[i] = (SCHALE.Common.FlatData.Tag)__p.bb.GetInt(p + i * 4); } return a; }
  public SCHALE.Common.FlatData.Tag FavorItemUniqueTags(int j) { int o = __p.__offset(10); return o != 0 ? (SCHALE.Common.FlatData.Tag)__p.bb.GetInt(__p.__vector(o) + j * 4) : (SCHALE.Common.FlatData.Tag)0; }
  public int FavorItemUniqueTagsLength { get { int o = __p.__offset(10); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<SCHALE.Common.FlatData.Tag> GetFavorItemUniqueTagsBytes() { return __p.__vector_as_span<SCHALE.Common.FlatData.Tag>(10, 4); }
#else
  public ArraySegment<byte>? GetFavorItemUniqueTagsBytes() { return __p.__vector_as_arraysegment(10); }
#endif
  public SCHALE.Common.FlatData.Tag[] GetFavorItemUniqueTagsArray() { int o = __p.__offset(10); if (o == 0) return null; int p = __p.__vector(o); int l = __p.__vector_len(o); SCHALE.Common.FlatData.Tag[] a = new SCHALE.Common.FlatData.Tag[l]; for (int i = 0; i < l; i++) { a[i] = (SCHALE.Common.FlatData.Tag)__p.bb.GetInt(p + i * 4); } return a; }
  public SCHALE.Common.FlatData.Tag ForbiddenTags(int j) { int o = __p.__offset(12); return o != 0 ? (SCHALE.Common.FlatData.Tag)__p.bb.GetInt(__p.__vector(o) + j * 4) : (SCHALE.Common.FlatData.Tag)0; }
  public int ForbiddenTagsLength { get { int o = __p.__offset(12); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<SCHALE.Common.FlatData.Tag> GetForbiddenTagsBytes() { return __p.__vector_as_span<SCHALE.Common.FlatData.Tag>(12, 4); }
#else
  public ArraySegment<byte>? GetForbiddenTagsBytes() { return __p.__vector_as_arraysegment(12); }
#endif
  public SCHALE.Common.FlatData.Tag[] GetForbiddenTagsArray() { int o = __p.__offset(12); if (o == 0) return null; int p = __p.__vector(o); int l = __p.__vector_len(o); SCHALE.Common.FlatData.Tag[] a = new SCHALE.Common.FlatData.Tag[l]; for (int i = 0; i < l; i++) { a[i] = (SCHALE.Common.FlatData.Tag)__p.bb.GetInt(p + i * 4); } return a; }
  public SCHALE.Common.FlatData.Tag ZoneWhiteListTags(int j) { int o = __p.__offset(14); return o != 0 ? (SCHALE.Common.FlatData.Tag)__p.bb.GetInt(__p.__vector(o) + j * 4) : (SCHALE.Common.FlatData.Tag)0; }
  public int ZoneWhiteListTagsLength { get { int o = __p.__offset(14); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<SCHALE.Common.FlatData.Tag> GetZoneWhiteListTagsBytes() { return __p.__vector_as_span<SCHALE.Common.FlatData.Tag>(14, 4); }
#else
  public ArraySegment<byte>? GetZoneWhiteListTagsBytes() { return __p.__vector_as_arraysegment(14); }
#endif
  public SCHALE.Common.FlatData.Tag[] GetZoneWhiteListTagsArray() { int o = __p.__offset(14); if (o == 0) return null; int p = __p.__vector(o); int l = __p.__vector_len(o); SCHALE.Common.FlatData.Tag[] a = new SCHALE.Common.FlatData.Tag[l]; for (int i = 0; i < l; i++) { a[i] = (SCHALE.Common.FlatData.Tag)__p.bb.GetInt(p + i * 4); } return a; }

  public static Offset<SCHALE.Common.FlatData.CharacterAcademyTagsExcel> CreateCharacterAcademyTagsExcel(FlatBufferBuilder builder,
      long Id = 0,
      VectorOffset FavorTagsOffset = default(VectorOffset),
      VectorOffset FavorItemTagsOffset = default(VectorOffset),
      VectorOffset FavorItemUniqueTagsOffset = default(VectorOffset),
      VectorOffset ForbiddenTagsOffset = default(VectorOffset),
      VectorOffset ZoneWhiteListTagsOffset = default(VectorOffset)) {
    builder.StartTable(6);
    CharacterAcademyTagsExcel.AddId(builder, Id);
    CharacterAcademyTagsExcel.AddZoneWhiteListTags(builder, ZoneWhiteListTagsOffset);
    CharacterAcademyTagsExcel.AddForbiddenTags(builder, ForbiddenTagsOffset);
    CharacterAcademyTagsExcel.AddFavorItemUniqueTags(builder, FavorItemUniqueTagsOffset);
    CharacterAcademyTagsExcel.AddFavorItemTags(builder, FavorItemTagsOffset);
    CharacterAcademyTagsExcel.AddFavorTags(builder, FavorTagsOffset);
    return CharacterAcademyTagsExcel.EndCharacterAcademyTagsExcel(builder);
  }

  public static void StartCharacterAcademyTagsExcel(FlatBufferBuilder builder) { builder.StartTable(6); }
  public static void AddId(FlatBufferBuilder builder, long id) { builder.AddLong(0, id, 0); }
  public static void AddFavorTags(FlatBufferBuilder builder, VectorOffset favorTagsOffset) { builder.AddOffset(1, favorTagsOffset.Value, 0); }
  public static VectorOffset CreateFavorTagsVector(FlatBufferBuilder builder, SCHALE.Common.FlatData.Tag[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt((int)data[i]); return builder.EndVector(); }
  public static VectorOffset CreateFavorTagsVectorBlock(FlatBufferBuilder builder, SCHALE.Common.FlatData.Tag[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateFavorTagsVectorBlock(FlatBufferBuilder builder, ArraySegment<SCHALE.Common.FlatData.Tag> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateFavorTagsVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<SCHALE.Common.FlatData.Tag>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartFavorTagsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddFavorItemTags(FlatBufferBuilder builder, VectorOffset favorItemTagsOffset) { builder.AddOffset(2, favorItemTagsOffset.Value, 0); }
  public static VectorOffset CreateFavorItemTagsVector(FlatBufferBuilder builder, SCHALE.Common.FlatData.Tag[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt((int)data[i]); return builder.EndVector(); }
  public static VectorOffset CreateFavorItemTagsVectorBlock(FlatBufferBuilder builder, SCHALE.Common.FlatData.Tag[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateFavorItemTagsVectorBlock(FlatBufferBuilder builder, ArraySegment<SCHALE.Common.FlatData.Tag> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateFavorItemTagsVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<SCHALE.Common.FlatData.Tag>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartFavorItemTagsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddFavorItemUniqueTags(FlatBufferBuilder builder, VectorOffset favorItemUniqueTagsOffset) { builder.AddOffset(3, favorItemUniqueTagsOffset.Value, 0); }
  public static VectorOffset CreateFavorItemUniqueTagsVector(FlatBufferBuilder builder, SCHALE.Common.FlatData.Tag[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt((int)data[i]); return builder.EndVector(); }
  public static VectorOffset CreateFavorItemUniqueTagsVectorBlock(FlatBufferBuilder builder, SCHALE.Common.FlatData.Tag[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateFavorItemUniqueTagsVectorBlock(FlatBufferBuilder builder, ArraySegment<SCHALE.Common.FlatData.Tag> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateFavorItemUniqueTagsVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<SCHALE.Common.FlatData.Tag>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartFavorItemUniqueTagsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddForbiddenTags(FlatBufferBuilder builder, VectorOffset forbiddenTagsOffset) { builder.AddOffset(4, forbiddenTagsOffset.Value, 0); }
  public static VectorOffset CreateForbiddenTagsVector(FlatBufferBuilder builder, SCHALE.Common.FlatData.Tag[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt((int)data[i]); return builder.EndVector(); }
  public static VectorOffset CreateForbiddenTagsVectorBlock(FlatBufferBuilder builder, SCHALE.Common.FlatData.Tag[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateForbiddenTagsVectorBlock(FlatBufferBuilder builder, ArraySegment<SCHALE.Common.FlatData.Tag> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateForbiddenTagsVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<SCHALE.Common.FlatData.Tag>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartForbiddenTagsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddZoneWhiteListTags(FlatBufferBuilder builder, VectorOffset zoneWhiteListTagsOffset) { builder.AddOffset(5, zoneWhiteListTagsOffset.Value, 0); }
  public static VectorOffset CreateZoneWhiteListTagsVector(FlatBufferBuilder builder, SCHALE.Common.FlatData.Tag[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt((int)data[i]); return builder.EndVector(); }
  public static VectorOffset CreateZoneWhiteListTagsVectorBlock(FlatBufferBuilder builder, SCHALE.Common.FlatData.Tag[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateZoneWhiteListTagsVectorBlock(FlatBufferBuilder builder, ArraySegment<SCHALE.Common.FlatData.Tag> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateZoneWhiteListTagsVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<SCHALE.Common.FlatData.Tag>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartZoneWhiteListTagsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<SCHALE.Common.FlatData.CharacterAcademyTagsExcel> EndCharacterAcademyTagsExcel(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<SCHALE.Common.FlatData.CharacterAcademyTagsExcel>(o);
  }
  public CharacterAcademyTagsExcelT UnPack() {
    var _o = new CharacterAcademyTagsExcelT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(CharacterAcademyTagsExcelT _o) {
		byte[] key = TableEncryptionService.CreateKey("CharacterAcademyTags");
    _o.Id = TableEncryptionService.Convert(this.Id, key);
    _o.FavorTags = new List<SCHALE.Common.FlatData.Tag>();
    for (var _j = 0; _j < this.FavorTagsLength; ++_j) {_o.FavorTags.Add(TableEncryptionService.Convert(this.FavorTags(_j), key));}
    _o.FavorItemTags = new List<SCHALE.Common.FlatData.Tag>();
    for (var _j = 0; _j < this.FavorItemTagsLength; ++_j) {_o.FavorItemTags.Add(TableEncryptionService.Convert(this.FavorItemTags(_j), key));}
    _o.FavorItemUniqueTags = new List<SCHALE.Common.FlatData.Tag>();
    for (var _j = 0; _j < this.FavorItemUniqueTagsLength; ++_j) {_o.FavorItemUniqueTags.Add(TableEncryptionService.Convert(this.FavorItemUniqueTags(_j), key));}
    _o.ForbiddenTags = new List<SCHALE.Common.FlatData.Tag>();
    for (var _j = 0; _j < this.ForbiddenTagsLength; ++_j) {_o.ForbiddenTags.Add(TableEncryptionService.Convert(this.ForbiddenTags(_j), key));}
    _o.ZoneWhiteListTags = new List<SCHALE.Common.FlatData.Tag>();
    for (var _j = 0; _j < this.ZoneWhiteListTagsLength; ++_j) {_o.ZoneWhiteListTags.Add(TableEncryptionService.Convert(this.ZoneWhiteListTags(_j), key));}
  }
  public static Offset<SCHALE.Common.FlatData.CharacterAcademyTagsExcel> Pack(FlatBufferBuilder builder, CharacterAcademyTagsExcelT _o) {
    if (_o == null) return default(Offset<SCHALE.Common.FlatData.CharacterAcademyTagsExcel>);
    var _FavorTags = default(VectorOffset);
    if (_o.FavorTags != null) {
      var __FavorTags = _o.FavorTags.ToArray();
      _FavorTags = CreateFavorTagsVector(builder, __FavorTags);
    }
    var _FavorItemTags = default(VectorOffset);
    if (_o.FavorItemTags != null) {
      var __FavorItemTags = _o.FavorItemTags.ToArray();
      _FavorItemTags = CreateFavorItemTagsVector(builder, __FavorItemTags);
    }
    var _FavorItemUniqueTags = default(VectorOffset);
    if (_o.FavorItemUniqueTags != null) {
      var __FavorItemUniqueTags = _o.FavorItemUniqueTags.ToArray();
      _FavorItemUniqueTags = CreateFavorItemUniqueTagsVector(builder, __FavorItemUniqueTags);
    }
    var _ForbiddenTags = default(VectorOffset);
    if (_o.ForbiddenTags != null) {
      var __ForbiddenTags = _o.ForbiddenTags.ToArray();
      _ForbiddenTags = CreateForbiddenTagsVector(builder, __ForbiddenTags);
    }
    var _ZoneWhiteListTags = default(VectorOffset);
    if (_o.ZoneWhiteListTags != null) {
      var __ZoneWhiteListTags = _o.ZoneWhiteListTags.ToArray();
      _ZoneWhiteListTags = CreateZoneWhiteListTagsVector(builder, __ZoneWhiteListTags);
    }
    return CreateCharacterAcademyTagsExcel(
      builder,
      _o.Id,
      _FavorTags,
      _FavorItemTags,
      _FavorItemUniqueTags,
      _ForbiddenTags,
      _ZoneWhiteListTags);
  }
}

public class CharacterAcademyTagsExcelT
{
  public long Id { get; set; }
  public List<SCHALE.Common.FlatData.Tag> FavorTags { get; set; }
  public List<SCHALE.Common.FlatData.Tag> FavorItemTags { get; set; }
  public List<SCHALE.Common.FlatData.Tag> FavorItemUniqueTags { get; set; }
  public List<SCHALE.Common.FlatData.Tag> ForbiddenTags { get; set; }
  public List<SCHALE.Common.FlatData.Tag> ZoneWhiteListTags { get; set; }

  public CharacterAcademyTagsExcelT() {
    this.Id = 0;
    this.FavorTags = null;
    this.FavorItemTags = null;
    this.FavorItemUniqueTags = null;
    this.ForbiddenTags = null;
    this.ZoneWhiteListTags = null;
  }
}


static public class CharacterAcademyTagsExcelVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*Id*/, 8 /*long*/, 8, false)
      && verifier.VerifyVectorOfData(tablePos, 6 /*FavorTags*/, 4 /*SCHALE.Common.FlatData.Tag*/, false)
      && verifier.VerifyVectorOfData(tablePos, 8 /*FavorItemTags*/, 4 /*SCHALE.Common.FlatData.Tag*/, false)
      && verifier.VerifyVectorOfData(tablePos, 10 /*FavorItemUniqueTags*/, 4 /*SCHALE.Common.FlatData.Tag*/, false)
      && verifier.VerifyVectorOfData(tablePos, 12 /*ForbiddenTags*/, 4 /*SCHALE.Common.FlatData.Tag*/, false)
      && verifier.VerifyVectorOfData(tablePos, 14 /*ZoneWhiteListTags*/, 4 /*SCHALE.Common.FlatData.Tag*/, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
