// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace SCHALE.Common.FlatData
{

using global::System;
using global::System.Collections.Generic;
using global::SCHALE.Common.Crypto;
using global::Google.FlatBuffers;

public struct FixedEchelonSettingExcel : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_24_3_25(); }
  public static FixedEchelonSettingExcel GetRootAsFixedEchelonSettingExcel(ByteBuffer _bb) { return GetRootAsFixedEchelonSettingExcel(_bb, new FixedEchelonSettingExcel()); }
  public static FixedEchelonSettingExcel GetRootAsFixedEchelonSettingExcel(ByteBuffer _bb, FixedEchelonSettingExcel obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public FixedEchelonSettingExcel __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public long FixedEchelonID { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public bool EchelonSceneSkip { get { int o = __p.__offset(6); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  public int MainLeaderSlot { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public long MainCharacterID(int j) { int o = __p.__offset(10); return o != 0 ? __p.bb.GetLong(__p.__vector(o) + j * 8) : (long)0; }
  public int MainCharacterIDLength { get { int o = __p.__offset(10); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<long> GetMainCharacterIDBytes() { return __p.__vector_as_span<long>(10, 8); }
#else
  public ArraySegment<byte>? GetMainCharacterIDBytes() { return __p.__vector_as_arraysegment(10); }
#endif
  public long[] GetMainCharacterIDArray() { return __p.__vector_as_array<long>(10); }
  public int MainLevel(int j) { int o = __p.__offset(12); return o != 0 ? __p.bb.GetInt(__p.__vector(o) + j * 4) : (int)0; }
  public int MainLevelLength { get { int o = __p.__offset(12); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<int> GetMainLevelBytes() { return __p.__vector_as_span<int>(12, 4); }
#else
  public ArraySegment<byte>? GetMainLevelBytes() { return __p.__vector_as_arraysegment(12); }
#endif
  public int[] GetMainLevelArray() { return __p.__vector_as_array<int>(12); }
  public int MainGrade(int j) { int o = __p.__offset(14); return o != 0 ? __p.bb.GetInt(__p.__vector(o) + j * 4) : (int)0; }
  public int MainGradeLength { get { int o = __p.__offset(14); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<int> GetMainGradeBytes() { return __p.__vector_as_span<int>(14, 4); }
#else
  public ArraySegment<byte>? GetMainGradeBytes() { return __p.__vector_as_arraysegment(14); }
#endif
  public int[] GetMainGradeArray() { return __p.__vector_as_array<int>(14); }
  public int MainExSkillLevel(int j) { int o = __p.__offset(16); return o != 0 ? __p.bb.GetInt(__p.__vector(o) + j * 4) : (int)0; }
  public int MainExSkillLevelLength { get { int o = __p.__offset(16); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<int> GetMainExSkillLevelBytes() { return __p.__vector_as_span<int>(16, 4); }
#else
  public ArraySegment<byte>? GetMainExSkillLevelBytes() { return __p.__vector_as_arraysegment(16); }
#endif
  public int[] GetMainExSkillLevelArray() { return __p.__vector_as_array<int>(16); }
  public int MainNoneExSkillLevel(int j) { int o = __p.__offset(18); return o != 0 ? __p.bb.GetInt(__p.__vector(o) + j * 4) : (int)0; }
  public int MainNoneExSkillLevelLength { get { int o = __p.__offset(18); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<int> GetMainNoneExSkillLevelBytes() { return __p.__vector_as_span<int>(18, 4); }
#else
  public ArraySegment<byte>? GetMainNoneExSkillLevelBytes() { return __p.__vector_as_arraysegment(18); }
#endif
  public int[] GetMainNoneExSkillLevelArray() { return __p.__vector_as_array<int>(18); }
  public int MainEquipment1Tier(int j) { int o = __p.__offset(20); return o != 0 ? __p.bb.GetInt(__p.__vector(o) + j * 4) : (int)0; }
  public int MainEquipment1TierLength { get { int o = __p.__offset(20); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<int> GetMainEquipment1TierBytes() { return __p.__vector_as_span<int>(20, 4); }
#else
  public ArraySegment<byte>? GetMainEquipment1TierBytes() { return __p.__vector_as_arraysegment(20); }
#endif
  public int[] GetMainEquipment1TierArray() { return __p.__vector_as_array<int>(20); }
  public int MainEquipment1Level(int j) { int o = __p.__offset(22); return o != 0 ? __p.bb.GetInt(__p.__vector(o) + j * 4) : (int)0; }
  public int MainEquipment1LevelLength { get { int o = __p.__offset(22); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<int> GetMainEquipment1LevelBytes() { return __p.__vector_as_span<int>(22, 4); }
#else
  public ArraySegment<byte>? GetMainEquipment1LevelBytes() { return __p.__vector_as_arraysegment(22); }
#endif
  public int[] GetMainEquipment1LevelArray() { return __p.__vector_as_array<int>(22); }
  public int MainEquipment2Tier(int j) { int o = __p.__offset(24); return o != 0 ? __p.bb.GetInt(__p.__vector(o) + j * 4) : (int)0; }
  public int MainEquipment2TierLength { get { int o = __p.__offset(24); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<int> GetMainEquipment2TierBytes() { return __p.__vector_as_span<int>(24, 4); }
#else
  public ArraySegment<byte>? GetMainEquipment2TierBytes() { return __p.__vector_as_arraysegment(24); }
#endif
  public int[] GetMainEquipment2TierArray() { return __p.__vector_as_array<int>(24); }
  public int MainEquipment2Level(int j) { int o = __p.__offset(26); return o != 0 ? __p.bb.GetInt(__p.__vector(o) + j * 4) : (int)0; }
  public int MainEquipment2LevelLength { get { int o = __p.__offset(26); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<int> GetMainEquipment2LevelBytes() { return __p.__vector_as_span<int>(26, 4); }
#else
  public ArraySegment<byte>? GetMainEquipment2LevelBytes() { return __p.__vector_as_arraysegment(26); }
#endif
  public int[] GetMainEquipment2LevelArray() { return __p.__vector_as_array<int>(26); }
  public int MainEquipment3Tier(int j) { int o = __p.__offset(28); return o != 0 ? __p.bb.GetInt(__p.__vector(o) + j * 4) : (int)0; }
  public int MainEquipment3TierLength { get { int o = __p.__offset(28); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<int> GetMainEquipment3TierBytes() { return __p.__vector_as_span<int>(28, 4); }
#else
  public ArraySegment<byte>? GetMainEquipment3TierBytes() { return __p.__vector_as_arraysegment(28); }
#endif
  public int[] GetMainEquipment3TierArray() { return __p.__vector_as_array<int>(28); }
  public int MainEquipment3Level(int j) { int o = __p.__offset(30); return o != 0 ? __p.bb.GetInt(__p.__vector(o) + j * 4) : (int)0; }
  public int MainEquipment3LevelLength { get { int o = __p.__offset(30); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<int> GetMainEquipment3LevelBytes() { return __p.__vector_as_span<int>(30, 4); }
#else
  public ArraySegment<byte>? GetMainEquipment3LevelBytes() { return __p.__vector_as_arraysegment(30); }
#endif
  public int[] GetMainEquipment3LevelArray() { return __p.__vector_as_array<int>(30); }
  public int MainCharacterWeaponGrade(int j) { int o = __p.__offset(32); return o != 0 ? __p.bb.GetInt(__p.__vector(o) + j * 4) : (int)0; }
  public int MainCharacterWeaponGradeLength { get { int o = __p.__offset(32); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<int> GetMainCharacterWeaponGradeBytes() { return __p.__vector_as_span<int>(32, 4); }
#else
  public ArraySegment<byte>? GetMainCharacterWeaponGradeBytes() { return __p.__vector_as_arraysegment(32); }
#endif
  public int[] GetMainCharacterWeaponGradeArray() { return __p.__vector_as_array<int>(32); }
  public int MainCharacterWeaponLevel(int j) { int o = __p.__offset(34); return o != 0 ? __p.bb.GetInt(__p.__vector(o) + j * 4) : (int)0; }
  public int MainCharacterWeaponLevelLength { get { int o = __p.__offset(34); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<int> GetMainCharacterWeaponLevelBytes() { return __p.__vector_as_span<int>(34, 4); }
#else
  public ArraySegment<byte>? GetMainCharacterWeaponLevelBytes() { return __p.__vector_as_arraysegment(34); }
#endif
  public int[] GetMainCharacterWeaponLevelArray() { return __p.__vector_as_array<int>(34); }
  public int MainCharacterGearTier(int j) { int o = __p.__offset(36); return o != 0 ? __p.bb.GetInt(__p.__vector(o) + j * 4) : (int)0; }
  public int MainCharacterGearTierLength { get { int o = __p.__offset(36); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<int> GetMainCharacterGearTierBytes() { return __p.__vector_as_span<int>(36, 4); }
#else
  public ArraySegment<byte>? GetMainCharacterGearTierBytes() { return __p.__vector_as_arraysegment(36); }
#endif
  public int[] GetMainCharacterGearTierArray() { return __p.__vector_as_array<int>(36); }
  public int MainCharacterGearLevel(int j) { int o = __p.__offset(38); return o != 0 ? __p.bb.GetInt(__p.__vector(o) + j * 4) : (int)0; }
  public int MainCharacterGearLevelLength { get { int o = __p.__offset(38); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<int> GetMainCharacterGearLevelBytes() { return __p.__vector_as_span<int>(38, 4); }
#else
  public ArraySegment<byte>? GetMainCharacterGearLevelBytes() { return __p.__vector_as_arraysegment(38); }
#endif
  public int[] GetMainCharacterGearLevelArray() { return __p.__vector_as_array<int>(38); }
  public long SupportCharacterID(int j) { int o = __p.__offset(40); return o != 0 ? __p.bb.GetLong(__p.__vector(o) + j * 8) : (long)0; }
  public int SupportCharacterIDLength { get { int o = __p.__offset(40); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<long> GetSupportCharacterIDBytes() { return __p.__vector_as_span<long>(40, 8); }
#else
  public ArraySegment<byte>? GetSupportCharacterIDBytes() { return __p.__vector_as_arraysegment(40); }
#endif
  public long[] GetSupportCharacterIDArray() { return __p.__vector_as_array<long>(40); }
  public int SupportLevel(int j) { int o = __p.__offset(42); return o != 0 ? __p.bb.GetInt(__p.__vector(o) + j * 4) : (int)0; }
  public int SupportLevelLength { get { int o = __p.__offset(42); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<int> GetSupportLevelBytes() { return __p.__vector_as_span<int>(42, 4); }
#else
  public ArraySegment<byte>? GetSupportLevelBytes() { return __p.__vector_as_arraysegment(42); }
#endif
  public int[] GetSupportLevelArray() { return __p.__vector_as_array<int>(42); }
  public int SupportGrade(int j) { int o = __p.__offset(44); return o != 0 ? __p.bb.GetInt(__p.__vector(o) + j * 4) : (int)0; }
  public int SupportGradeLength { get { int o = __p.__offset(44); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<int> GetSupportGradeBytes() { return __p.__vector_as_span<int>(44, 4); }
#else
  public ArraySegment<byte>? GetSupportGradeBytes() { return __p.__vector_as_arraysegment(44); }
#endif
  public int[] GetSupportGradeArray() { return __p.__vector_as_array<int>(44); }
  public int SupportExSkillLevel(int j) { int o = __p.__offset(46); return o != 0 ? __p.bb.GetInt(__p.__vector(o) + j * 4) : (int)0; }
  public int SupportExSkillLevelLength { get { int o = __p.__offset(46); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<int> GetSupportExSkillLevelBytes() { return __p.__vector_as_span<int>(46, 4); }
#else
  public ArraySegment<byte>? GetSupportExSkillLevelBytes() { return __p.__vector_as_arraysegment(46); }
#endif
  public int[] GetSupportExSkillLevelArray() { return __p.__vector_as_array<int>(46); }
  public int SupportNoneExSkillLevel(int j) { int o = __p.__offset(48); return o != 0 ? __p.bb.GetInt(__p.__vector(o) + j * 4) : (int)0; }
  public int SupportNoneExSkillLevelLength { get { int o = __p.__offset(48); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<int> GetSupportNoneExSkillLevelBytes() { return __p.__vector_as_span<int>(48, 4); }
#else
  public ArraySegment<byte>? GetSupportNoneExSkillLevelBytes() { return __p.__vector_as_arraysegment(48); }
#endif
  public int[] GetSupportNoneExSkillLevelArray() { return __p.__vector_as_array<int>(48); }
  public int SupportEquipment1Tier(int j) { int o = __p.__offset(50); return o != 0 ? __p.bb.GetInt(__p.__vector(o) + j * 4) : (int)0; }
  public int SupportEquipment1TierLength { get { int o = __p.__offset(50); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<int> GetSupportEquipment1TierBytes() { return __p.__vector_as_span<int>(50, 4); }
#else
  public ArraySegment<byte>? GetSupportEquipment1TierBytes() { return __p.__vector_as_arraysegment(50); }
#endif
  public int[] GetSupportEquipment1TierArray() { return __p.__vector_as_array<int>(50); }
  public int SupportEquipment1Level(int j) { int o = __p.__offset(52); return o != 0 ? __p.bb.GetInt(__p.__vector(o) + j * 4) : (int)0; }
  public int SupportEquipment1LevelLength { get { int o = __p.__offset(52); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<int> GetSupportEquipment1LevelBytes() { return __p.__vector_as_span<int>(52, 4); }
#else
  public ArraySegment<byte>? GetSupportEquipment1LevelBytes() { return __p.__vector_as_arraysegment(52); }
#endif
  public int[] GetSupportEquipment1LevelArray() { return __p.__vector_as_array<int>(52); }
  public int SupportEquipment2Tier(int j) { int o = __p.__offset(54); return o != 0 ? __p.bb.GetInt(__p.__vector(o) + j * 4) : (int)0; }
  public int SupportEquipment2TierLength { get { int o = __p.__offset(54); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<int> GetSupportEquipment2TierBytes() { return __p.__vector_as_span<int>(54, 4); }
#else
  public ArraySegment<byte>? GetSupportEquipment2TierBytes() { return __p.__vector_as_arraysegment(54); }
#endif
  public int[] GetSupportEquipment2TierArray() { return __p.__vector_as_array<int>(54); }
  public int SupportEquipment2Level(int j) { int o = __p.__offset(56); return o != 0 ? __p.bb.GetInt(__p.__vector(o) + j * 4) : (int)0; }
  public int SupportEquipment2LevelLength { get { int o = __p.__offset(56); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<int> GetSupportEquipment2LevelBytes() { return __p.__vector_as_span<int>(56, 4); }
#else
  public ArraySegment<byte>? GetSupportEquipment2LevelBytes() { return __p.__vector_as_arraysegment(56); }
#endif
  public int[] GetSupportEquipment2LevelArray() { return __p.__vector_as_array<int>(56); }
  public int SupportEquipment3Tier(int j) { int o = __p.__offset(58); return o != 0 ? __p.bb.GetInt(__p.__vector(o) + j * 4) : (int)0; }
  public int SupportEquipment3TierLength { get { int o = __p.__offset(58); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<int> GetSupportEquipment3TierBytes() { return __p.__vector_as_span<int>(58, 4); }
#else
  public ArraySegment<byte>? GetSupportEquipment3TierBytes() { return __p.__vector_as_arraysegment(58); }
#endif
  public int[] GetSupportEquipment3TierArray() { return __p.__vector_as_array<int>(58); }
  public int SupportEquipment3Level(int j) { int o = __p.__offset(60); return o != 0 ? __p.bb.GetInt(__p.__vector(o) + j * 4) : (int)0; }
  public int SupportEquipment3LevelLength { get { int o = __p.__offset(60); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<int> GetSupportEquipment3LevelBytes() { return __p.__vector_as_span<int>(60, 4); }
#else
  public ArraySegment<byte>? GetSupportEquipment3LevelBytes() { return __p.__vector_as_arraysegment(60); }
#endif
  public int[] GetSupportEquipment3LevelArray() { return __p.__vector_as_array<int>(60); }
  public int SupportCharacterWeaponGrade(int j) { int o = __p.__offset(62); return o != 0 ? __p.bb.GetInt(__p.__vector(o) + j * 4) : (int)0; }
  public int SupportCharacterWeaponGradeLength { get { int o = __p.__offset(62); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<int> GetSupportCharacterWeaponGradeBytes() { return __p.__vector_as_span<int>(62, 4); }
#else
  public ArraySegment<byte>? GetSupportCharacterWeaponGradeBytes() { return __p.__vector_as_arraysegment(62); }
#endif
  public int[] GetSupportCharacterWeaponGradeArray() { return __p.__vector_as_array<int>(62); }
  public int SupportCharacterWeaponLevel(int j) { int o = __p.__offset(64); return o != 0 ? __p.bb.GetInt(__p.__vector(o) + j * 4) : (int)0; }
  public int SupportCharacterWeaponLevelLength { get { int o = __p.__offset(64); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<int> GetSupportCharacterWeaponLevelBytes() { return __p.__vector_as_span<int>(64, 4); }
#else
  public ArraySegment<byte>? GetSupportCharacterWeaponLevelBytes() { return __p.__vector_as_arraysegment(64); }
#endif
  public int[] GetSupportCharacterWeaponLevelArray() { return __p.__vector_as_array<int>(64); }
  public int SupportCharacterGearTier(int j) { int o = __p.__offset(66); return o != 0 ? __p.bb.GetInt(__p.__vector(o) + j * 4) : (int)0; }
  public int SupportCharacterGearTierLength { get { int o = __p.__offset(66); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<int> GetSupportCharacterGearTierBytes() { return __p.__vector_as_span<int>(66, 4); }
#else
  public ArraySegment<byte>? GetSupportCharacterGearTierBytes() { return __p.__vector_as_arraysegment(66); }
#endif
  public int[] GetSupportCharacterGearTierArray() { return __p.__vector_as_array<int>(66); }
  public int SupportCharacterGearLevel(int j) { int o = __p.__offset(68); return o != 0 ? __p.bb.GetInt(__p.__vector(o) + j * 4) : (int)0; }
  public int SupportCharacterGearLevelLength { get { int o = __p.__offset(68); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<int> GetSupportCharacterGearLevelBytes() { return __p.__vector_as_span<int>(68, 4); }
#else
  public ArraySegment<byte>? GetSupportCharacterGearLevelBytes() { return __p.__vector_as_arraysegment(68); }
#endif
  public int[] GetSupportCharacterGearLevelArray() { return __p.__vector_as_array<int>(68); }
  public long InteractionTSCharacterId { get { int o = __p.__offset(70); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }

  public static Offset<SCHALE.Common.FlatData.FixedEchelonSettingExcel> CreateFixedEchelonSettingExcel(FlatBufferBuilder builder,
      long FixedEchelonID = 0,
      bool EchelonSceneSkip = false,
      int MainLeaderSlot = 0,
      VectorOffset MainCharacterIDOffset = default(VectorOffset),
      VectorOffset MainLevelOffset = default(VectorOffset),
      VectorOffset MainGradeOffset = default(VectorOffset),
      VectorOffset MainExSkillLevelOffset = default(VectorOffset),
      VectorOffset MainNoneExSkillLevelOffset = default(VectorOffset),
      VectorOffset MainEquipment1TierOffset = default(VectorOffset),
      VectorOffset MainEquipment1LevelOffset = default(VectorOffset),
      VectorOffset MainEquipment2TierOffset = default(VectorOffset),
      VectorOffset MainEquipment2LevelOffset = default(VectorOffset),
      VectorOffset MainEquipment3TierOffset = default(VectorOffset),
      VectorOffset MainEquipment3LevelOffset = default(VectorOffset),
      VectorOffset MainCharacterWeaponGradeOffset = default(VectorOffset),
      VectorOffset MainCharacterWeaponLevelOffset = default(VectorOffset),
      VectorOffset MainCharacterGearTierOffset = default(VectorOffset),
      VectorOffset MainCharacterGearLevelOffset = default(VectorOffset),
      VectorOffset SupportCharacterIDOffset = default(VectorOffset),
      VectorOffset SupportLevelOffset = default(VectorOffset),
      VectorOffset SupportGradeOffset = default(VectorOffset),
      VectorOffset SupportExSkillLevelOffset = default(VectorOffset),
      VectorOffset SupportNoneExSkillLevelOffset = default(VectorOffset),
      VectorOffset SupportEquipment1TierOffset = default(VectorOffset),
      VectorOffset SupportEquipment1LevelOffset = default(VectorOffset),
      VectorOffset SupportEquipment2TierOffset = default(VectorOffset),
      VectorOffset SupportEquipment2LevelOffset = default(VectorOffset),
      VectorOffset SupportEquipment3TierOffset = default(VectorOffset),
      VectorOffset SupportEquipment3LevelOffset = default(VectorOffset),
      VectorOffset SupportCharacterWeaponGradeOffset = default(VectorOffset),
      VectorOffset SupportCharacterWeaponLevelOffset = default(VectorOffset),
      VectorOffset SupportCharacterGearTierOffset = default(VectorOffset),
      VectorOffset SupportCharacterGearLevelOffset = default(VectorOffset),
      long InteractionTSCharacterId = 0) {
    builder.StartTable(34);
    FixedEchelonSettingExcel.AddInteractionTSCharacterId(builder, InteractionTSCharacterId);
    FixedEchelonSettingExcel.AddFixedEchelonID(builder, FixedEchelonID);
    FixedEchelonSettingExcel.AddSupportCharacterGearLevel(builder, SupportCharacterGearLevelOffset);
    FixedEchelonSettingExcel.AddSupportCharacterGearTier(builder, SupportCharacterGearTierOffset);
    FixedEchelonSettingExcel.AddSupportCharacterWeaponLevel(builder, SupportCharacterWeaponLevelOffset);
    FixedEchelonSettingExcel.AddSupportCharacterWeaponGrade(builder, SupportCharacterWeaponGradeOffset);
    FixedEchelonSettingExcel.AddSupportEquipment3Level(builder, SupportEquipment3LevelOffset);
    FixedEchelonSettingExcel.AddSupportEquipment3Tier(builder, SupportEquipment3TierOffset);
    FixedEchelonSettingExcel.AddSupportEquipment2Level(builder, SupportEquipment2LevelOffset);
    FixedEchelonSettingExcel.AddSupportEquipment2Tier(builder, SupportEquipment2TierOffset);
    FixedEchelonSettingExcel.AddSupportEquipment1Level(builder, SupportEquipment1LevelOffset);
    FixedEchelonSettingExcel.AddSupportEquipment1Tier(builder, SupportEquipment1TierOffset);
    FixedEchelonSettingExcel.AddSupportNoneExSkillLevel(builder, SupportNoneExSkillLevelOffset);
    FixedEchelonSettingExcel.AddSupportExSkillLevel(builder, SupportExSkillLevelOffset);
    FixedEchelonSettingExcel.AddSupportGrade(builder, SupportGradeOffset);
    FixedEchelonSettingExcel.AddSupportLevel(builder, SupportLevelOffset);
    FixedEchelonSettingExcel.AddSupportCharacterID(builder, SupportCharacterIDOffset);
    FixedEchelonSettingExcel.AddMainCharacterGearLevel(builder, MainCharacterGearLevelOffset);
    FixedEchelonSettingExcel.AddMainCharacterGearTier(builder, MainCharacterGearTierOffset);
    FixedEchelonSettingExcel.AddMainCharacterWeaponLevel(builder, MainCharacterWeaponLevelOffset);
    FixedEchelonSettingExcel.AddMainCharacterWeaponGrade(builder, MainCharacterWeaponGradeOffset);
    FixedEchelonSettingExcel.AddMainEquipment3Level(builder, MainEquipment3LevelOffset);
    FixedEchelonSettingExcel.AddMainEquipment3Tier(builder, MainEquipment3TierOffset);
    FixedEchelonSettingExcel.AddMainEquipment2Level(builder, MainEquipment2LevelOffset);
    FixedEchelonSettingExcel.AddMainEquipment2Tier(builder, MainEquipment2TierOffset);
    FixedEchelonSettingExcel.AddMainEquipment1Level(builder, MainEquipment1LevelOffset);
    FixedEchelonSettingExcel.AddMainEquipment1Tier(builder, MainEquipment1TierOffset);
    FixedEchelonSettingExcel.AddMainNoneExSkillLevel(builder, MainNoneExSkillLevelOffset);
    FixedEchelonSettingExcel.AddMainExSkillLevel(builder, MainExSkillLevelOffset);
    FixedEchelonSettingExcel.AddMainGrade(builder, MainGradeOffset);
    FixedEchelonSettingExcel.AddMainLevel(builder, MainLevelOffset);
    FixedEchelonSettingExcel.AddMainCharacterID(builder, MainCharacterIDOffset);
    FixedEchelonSettingExcel.AddMainLeaderSlot(builder, MainLeaderSlot);
    FixedEchelonSettingExcel.AddEchelonSceneSkip(builder, EchelonSceneSkip);
    return FixedEchelonSettingExcel.EndFixedEchelonSettingExcel(builder);
  }

  public static void StartFixedEchelonSettingExcel(FlatBufferBuilder builder) { builder.StartTable(34); }
  public static void AddFixedEchelonID(FlatBufferBuilder builder, long fixedEchelonID) { builder.AddLong(0, fixedEchelonID, 0); }
  public static void AddEchelonSceneSkip(FlatBufferBuilder builder, bool echelonSceneSkip) { builder.AddBool(1, echelonSceneSkip, false); }
  public static void AddMainLeaderSlot(FlatBufferBuilder builder, int mainLeaderSlot) { builder.AddInt(2, mainLeaderSlot, 0); }
  public static void AddMainCharacterID(FlatBufferBuilder builder, VectorOffset mainCharacterIDOffset) { builder.AddOffset(3, mainCharacterIDOffset.Value, 0); }
  public static VectorOffset CreateMainCharacterIDVector(FlatBufferBuilder builder, long[] data) { builder.StartVector(8, data.Length, 8); for (int i = data.Length - 1; i >= 0; i--) builder.AddLong(data[i]); return builder.EndVector(); }
  public static VectorOffset CreateMainCharacterIDVectorBlock(FlatBufferBuilder builder, long[] data) { builder.StartVector(8, data.Length, 8); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateMainCharacterIDVectorBlock(FlatBufferBuilder builder, ArraySegment<long> data) { builder.StartVector(8, data.Count, 8); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateMainCharacterIDVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<long>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartMainCharacterIDVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(8, numElems, 8); }
  public static void AddMainLevel(FlatBufferBuilder builder, VectorOffset mainLevelOffset) { builder.AddOffset(4, mainLevelOffset.Value, 0); }
  public static VectorOffset CreateMainLevelVector(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt(data[i]); return builder.EndVector(); }
  public static VectorOffset CreateMainLevelVectorBlock(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateMainLevelVectorBlock(FlatBufferBuilder builder, ArraySegment<int> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateMainLevelVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<int>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartMainLevelVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddMainGrade(FlatBufferBuilder builder, VectorOffset mainGradeOffset) { builder.AddOffset(5, mainGradeOffset.Value, 0); }
  public static VectorOffset CreateMainGradeVector(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt(data[i]); return builder.EndVector(); }
  public static VectorOffset CreateMainGradeVectorBlock(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateMainGradeVectorBlock(FlatBufferBuilder builder, ArraySegment<int> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateMainGradeVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<int>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartMainGradeVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddMainExSkillLevel(FlatBufferBuilder builder, VectorOffset mainExSkillLevelOffset) { builder.AddOffset(6, mainExSkillLevelOffset.Value, 0); }
  public static VectorOffset CreateMainExSkillLevelVector(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt(data[i]); return builder.EndVector(); }
  public static VectorOffset CreateMainExSkillLevelVectorBlock(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateMainExSkillLevelVectorBlock(FlatBufferBuilder builder, ArraySegment<int> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateMainExSkillLevelVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<int>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartMainExSkillLevelVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddMainNoneExSkillLevel(FlatBufferBuilder builder, VectorOffset mainNoneExSkillLevelOffset) { builder.AddOffset(7, mainNoneExSkillLevelOffset.Value, 0); }
  public static VectorOffset CreateMainNoneExSkillLevelVector(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt(data[i]); return builder.EndVector(); }
  public static VectorOffset CreateMainNoneExSkillLevelVectorBlock(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateMainNoneExSkillLevelVectorBlock(FlatBufferBuilder builder, ArraySegment<int> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateMainNoneExSkillLevelVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<int>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartMainNoneExSkillLevelVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddMainEquipment1Tier(FlatBufferBuilder builder, VectorOffset mainEquipment1TierOffset) { builder.AddOffset(8, mainEquipment1TierOffset.Value, 0); }
  public static VectorOffset CreateMainEquipment1TierVector(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt(data[i]); return builder.EndVector(); }
  public static VectorOffset CreateMainEquipment1TierVectorBlock(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateMainEquipment1TierVectorBlock(FlatBufferBuilder builder, ArraySegment<int> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateMainEquipment1TierVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<int>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartMainEquipment1TierVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddMainEquipment1Level(FlatBufferBuilder builder, VectorOffset mainEquipment1LevelOffset) { builder.AddOffset(9, mainEquipment1LevelOffset.Value, 0); }
  public static VectorOffset CreateMainEquipment1LevelVector(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt(data[i]); return builder.EndVector(); }
  public static VectorOffset CreateMainEquipment1LevelVectorBlock(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateMainEquipment1LevelVectorBlock(FlatBufferBuilder builder, ArraySegment<int> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateMainEquipment1LevelVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<int>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartMainEquipment1LevelVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddMainEquipment2Tier(FlatBufferBuilder builder, VectorOffset mainEquipment2TierOffset) { builder.AddOffset(10, mainEquipment2TierOffset.Value, 0); }
  public static VectorOffset CreateMainEquipment2TierVector(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt(data[i]); return builder.EndVector(); }
  public static VectorOffset CreateMainEquipment2TierVectorBlock(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateMainEquipment2TierVectorBlock(FlatBufferBuilder builder, ArraySegment<int> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateMainEquipment2TierVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<int>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartMainEquipment2TierVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddMainEquipment2Level(FlatBufferBuilder builder, VectorOffset mainEquipment2LevelOffset) { builder.AddOffset(11, mainEquipment2LevelOffset.Value, 0); }
  public static VectorOffset CreateMainEquipment2LevelVector(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt(data[i]); return builder.EndVector(); }
  public static VectorOffset CreateMainEquipment2LevelVectorBlock(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateMainEquipment2LevelVectorBlock(FlatBufferBuilder builder, ArraySegment<int> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateMainEquipment2LevelVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<int>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartMainEquipment2LevelVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddMainEquipment3Tier(FlatBufferBuilder builder, VectorOffset mainEquipment3TierOffset) { builder.AddOffset(12, mainEquipment3TierOffset.Value, 0); }
  public static VectorOffset CreateMainEquipment3TierVector(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt(data[i]); return builder.EndVector(); }
  public static VectorOffset CreateMainEquipment3TierVectorBlock(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateMainEquipment3TierVectorBlock(FlatBufferBuilder builder, ArraySegment<int> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateMainEquipment3TierVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<int>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartMainEquipment3TierVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddMainEquipment3Level(FlatBufferBuilder builder, VectorOffset mainEquipment3LevelOffset) { builder.AddOffset(13, mainEquipment3LevelOffset.Value, 0); }
  public static VectorOffset CreateMainEquipment3LevelVector(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt(data[i]); return builder.EndVector(); }
  public static VectorOffset CreateMainEquipment3LevelVectorBlock(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateMainEquipment3LevelVectorBlock(FlatBufferBuilder builder, ArraySegment<int> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateMainEquipment3LevelVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<int>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartMainEquipment3LevelVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddMainCharacterWeaponGrade(FlatBufferBuilder builder, VectorOffset mainCharacterWeaponGradeOffset) { builder.AddOffset(14, mainCharacterWeaponGradeOffset.Value, 0); }
  public static VectorOffset CreateMainCharacterWeaponGradeVector(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt(data[i]); return builder.EndVector(); }
  public static VectorOffset CreateMainCharacterWeaponGradeVectorBlock(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateMainCharacterWeaponGradeVectorBlock(FlatBufferBuilder builder, ArraySegment<int> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateMainCharacterWeaponGradeVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<int>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartMainCharacterWeaponGradeVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddMainCharacterWeaponLevel(FlatBufferBuilder builder, VectorOffset mainCharacterWeaponLevelOffset) { builder.AddOffset(15, mainCharacterWeaponLevelOffset.Value, 0); }
  public static VectorOffset CreateMainCharacterWeaponLevelVector(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt(data[i]); return builder.EndVector(); }
  public static VectorOffset CreateMainCharacterWeaponLevelVectorBlock(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateMainCharacterWeaponLevelVectorBlock(FlatBufferBuilder builder, ArraySegment<int> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateMainCharacterWeaponLevelVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<int>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartMainCharacterWeaponLevelVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddMainCharacterGearTier(FlatBufferBuilder builder, VectorOffset mainCharacterGearTierOffset) { builder.AddOffset(16, mainCharacterGearTierOffset.Value, 0); }
  public static VectorOffset CreateMainCharacterGearTierVector(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt(data[i]); return builder.EndVector(); }
  public static VectorOffset CreateMainCharacterGearTierVectorBlock(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateMainCharacterGearTierVectorBlock(FlatBufferBuilder builder, ArraySegment<int> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateMainCharacterGearTierVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<int>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartMainCharacterGearTierVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddMainCharacterGearLevel(FlatBufferBuilder builder, VectorOffset mainCharacterGearLevelOffset) { builder.AddOffset(17, mainCharacterGearLevelOffset.Value, 0); }
  public static VectorOffset CreateMainCharacterGearLevelVector(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt(data[i]); return builder.EndVector(); }
  public static VectorOffset CreateMainCharacterGearLevelVectorBlock(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateMainCharacterGearLevelVectorBlock(FlatBufferBuilder builder, ArraySegment<int> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateMainCharacterGearLevelVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<int>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartMainCharacterGearLevelVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddSupportCharacterID(FlatBufferBuilder builder, VectorOffset supportCharacterIDOffset) { builder.AddOffset(18, supportCharacterIDOffset.Value, 0); }
  public static VectorOffset CreateSupportCharacterIDVector(FlatBufferBuilder builder, long[] data) { builder.StartVector(8, data.Length, 8); for (int i = data.Length - 1; i >= 0; i--) builder.AddLong(data[i]); return builder.EndVector(); }
  public static VectorOffset CreateSupportCharacterIDVectorBlock(FlatBufferBuilder builder, long[] data) { builder.StartVector(8, data.Length, 8); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateSupportCharacterIDVectorBlock(FlatBufferBuilder builder, ArraySegment<long> data) { builder.StartVector(8, data.Count, 8); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateSupportCharacterIDVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<long>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartSupportCharacterIDVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(8, numElems, 8); }
  public static void AddSupportLevel(FlatBufferBuilder builder, VectorOffset supportLevelOffset) { builder.AddOffset(19, supportLevelOffset.Value, 0); }
  public static VectorOffset CreateSupportLevelVector(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt(data[i]); return builder.EndVector(); }
  public static VectorOffset CreateSupportLevelVectorBlock(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateSupportLevelVectorBlock(FlatBufferBuilder builder, ArraySegment<int> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateSupportLevelVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<int>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartSupportLevelVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddSupportGrade(FlatBufferBuilder builder, VectorOffset supportGradeOffset) { builder.AddOffset(20, supportGradeOffset.Value, 0); }
  public static VectorOffset CreateSupportGradeVector(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt(data[i]); return builder.EndVector(); }
  public static VectorOffset CreateSupportGradeVectorBlock(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateSupportGradeVectorBlock(FlatBufferBuilder builder, ArraySegment<int> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateSupportGradeVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<int>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartSupportGradeVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddSupportExSkillLevel(FlatBufferBuilder builder, VectorOffset supportExSkillLevelOffset) { builder.AddOffset(21, supportExSkillLevelOffset.Value, 0); }
  public static VectorOffset CreateSupportExSkillLevelVector(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt(data[i]); return builder.EndVector(); }
  public static VectorOffset CreateSupportExSkillLevelVectorBlock(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateSupportExSkillLevelVectorBlock(FlatBufferBuilder builder, ArraySegment<int> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateSupportExSkillLevelVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<int>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartSupportExSkillLevelVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddSupportNoneExSkillLevel(FlatBufferBuilder builder, VectorOffset supportNoneExSkillLevelOffset) { builder.AddOffset(22, supportNoneExSkillLevelOffset.Value, 0); }
  public static VectorOffset CreateSupportNoneExSkillLevelVector(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt(data[i]); return builder.EndVector(); }
  public static VectorOffset CreateSupportNoneExSkillLevelVectorBlock(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateSupportNoneExSkillLevelVectorBlock(FlatBufferBuilder builder, ArraySegment<int> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateSupportNoneExSkillLevelVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<int>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartSupportNoneExSkillLevelVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddSupportEquipment1Tier(FlatBufferBuilder builder, VectorOffset supportEquipment1TierOffset) { builder.AddOffset(23, supportEquipment1TierOffset.Value, 0); }
  public static VectorOffset CreateSupportEquipment1TierVector(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt(data[i]); return builder.EndVector(); }
  public static VectorOffset CreateSupportEquipment1TierVectorBlock(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateSupportEquipment1TierVectorBlock(FlatBufferBuilder builder, ArraySegment<int> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateSupportEquipment1TierVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<int>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartSupportEquipment1TierVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddSupportEquipment1Level(FlatBufferBuilder builder, VectorOffset supportEquipment1LevelOffset) { builder.AddOffset(24, supportEquipment1LevelOffset.Value, 0); }
  public static VectorOffset CreateSupportEquipment1LevelVector(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt(data[i]); return builder.EndVector(); }
  public static VectorOffset CreateSupportEquipment1LevelVectorBlock(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateSupportEquipment1LevelVectorBlock(FlatBufferBuilder builder, ArraySegment<int> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateSupportEquipment1LevelVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<int>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartSupportEquipment1LevelVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddSupportEquipment2Tier(FlatBufferBuilder builder, VectorOffset supportEquipment2TierOffset) { builder.AddOffset(25, supportEquipment2TierOffset.Value, 0); }
  public static VectorOffset CreateSupportEquipment2TierVector(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt(data[i]); return builder.EndVector(); }
  public static VectorOffset CreateSupportEquipment2TierVectorBlock(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateSupportEquipment2TierVectorBlock(FlatBufferBuilder builder, ArraySegment<int> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateSupportEquipment2TierVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<int>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartSupportEquipment2TierVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddSupportEquipment2Level(FlatBufferBuilder builder, VectorOffset supportEquipment2LevelOffset) { builder.AddOffset(26, supportEquipment2LevelOffset.Value, 0); }
  public static VectorOffset CreateSupportEquipment2LevelVector(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt(data[i]); return builder.EndVector(); }
  public static VectorOffset CreateSupportEquipment2LevelVectorBlock(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateSupportEquipment2LevelVectorBlock(FlatBufferBuilder builder, ArraySegment<int> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateSupportEquipment2LevelVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<int>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartSupportEquipment2LevelVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddSupportEquipment3Tier(FlatBufferBuilder builder, VectorOffset supportEquipment3TierOffset) { builder.AddOffset(27, supportEquipment3TierOffset.Value, 0); }
  public static VectorOffset CreateSupportEquipment3TierVector(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt(data[i]); return builder.EndVector(); }
  public static VectorOffset CreateSupportEquipment3TierVectorBlock(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateSupportEquipment3TierVectorBlock(FlatBufferBuilder builder, ArraySegment<int> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateSupportEquipment3TierVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<int>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartSupportEquipment3TierVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddSupportEquipment3Level(FlatBufferBuilder builder, VectorOffset supportEquipment3LevelOffset) { builder.AddOffset(28, supportEquipment3LevelOffset.Value, 0); }
  public static VectorOffset CreateSupportEquipment3LevelVector(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt(data[i]); return builder.EndVector(); }
  public static VectorOffset CreateSupportEquipment3LevelVectorBlock(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateSupportEquipment3LevelVectorBlock(FlatBufferBuilder builder, ArraySegment<int> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateSupportEquipment3LevelVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<int>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartSupportEquipment3LevelVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddSupportCharacterWeaponGrade(FlatBufferBuilder builder, VectorOffset supportCharacterWeaponGradeOffset) { builder.AddOffset(29, supportCharacterWeaponGradeOffset.Value, 0); }
  public static VectorOffset CreateSupportCharacterWeaponGradeVector(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt(data[i]); return builder.EndVector(); }
  public static VectorOffset CreateSupportCharacterWeaponGradeVectorBlock(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateSupportCharacterWeaponGradeVectorBlock(FlatBufferBuilder builder, ArraySegment<int> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateSupportCharacterWeaponGradeVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<int>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartSupportCharacterWeaponGradeVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddSupportCharacterWeaponLevel(FlatBufferBuilder builder, VectorOffset supportCharacterWeaponLevelOffset) { builder.AddOffset(30, supportCharacterWeaponLevelOffset.Value, 0); }
  public static VectorOffset CreateSupportCharacterWeaponLevelVector(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt(data[i]); return builder.EndVector(); }
  public static VectorOffset CreateSupportCharacterWeaponLevelVectorBlock(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateSupportCharacterWeaponLevelVectorBlock(FlatBufferBuilder builder, ArraySegment<int> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateSupportCharacterWeaponLevelVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<int>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartSupportCharacterWeaponLevelVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddSupportCharacterGearTier(FlatBufferBuilder builder, VectorOffset supportCharacterGearTierOffset) { builder.AddOffset(31, supportCharacterGearTierOffset.Value, 0); }
  public static VectorOffset CreateSupportCharacterGearTierVector(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt(data[i]); return builder.EndVector(); }
  public static VectorOffset CreateSupportCharacterGearTierVectorBlock(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateSupportCharacterGearTierVectorBlock(FlatBufferBuilder builder, ArraySegment<int> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateSupportCharacterGearTierVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<int>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartSupportCharacterGearTierVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddSupportCharacterGearLevel(FlatBufferBuilder builder, VectorOffset supportCharacterGearLevelOffset) { builder.AddOffset(32, supportCharacterGearLevelOffset.Value, 0); }
  public static VectorOffset CreateSupportCharacterGearLevelVector(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt(data[i]); return builder.EndVector(); }
  public static VectorOffset CreateSupportCharacterGearLevelVectorBlock(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateSupportCharacterGearLevelVectorBlock(FlatBufferBuilder builder, ArraySegment<int> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateSupportCharacterGearLevelVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<int>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartSupportCharacterGearLevelVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddInteractionTSCharacterId(FlatBufferBuilder builder, long interactionTSCharacterId) { builder.AddLong(33, interactionTSCharacterId, 0); }
  public static Offset<SCHALE.Common.FlatData.FixedEchelonSettingExcel> EndFixedEchelonSettingExcel(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<SCHALE.Common.FlatData.FixedEchelonSettingExcel>(o);
  }
  public FixedEchelonSettingExcelT UnPack() {
    var _o = new FixedEchelonSettingExcelT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(FixedEchelonSettingExcelT _o) {
		byte[] key = TableEncryptionService.CreateKey("FixedEchelonSetting");
    _o.FixedEchelonID = TableEncryptionService.Convert(this.FixedEchelonID, key);
    _o.EchelonSceneSkip = TableEncryptionService.Convert(this.EchelonSceneSkip, key);
    _o.MainLeaderSlot = TableEncryptionService.Convert(this.MainLeaderSlot, key);
    _o.MainCharacterID = new List<long>();
    for (var _j = 0; _j < this.MainCharacterIDLength; ++_j) {_o.MainCharacterID.Add(TableEncryptionService.Convert(this.MainCharacterID(_j), key));}
    _o.MainLevel = new List<int>();
    for (var _j = 0; _j < this.MainLevelLength; ++_j) {_o.MainLevel.Add(TableEncryptionService.Convert(this.MainLevel(_j), key));}
    _o.MainGrade = new List<int>();
    for (var _j = 0; _j < this.MainGradeLength; ++_j) {_o.MainGrade.Add(TableEncryptionService.Convert(this.MainGrade(_j), key));}
    _o.MainExSkillLevel = new List<int>();
    for (var _j = 0; _j < this.MainExSkillLevelLength; ++_j) {_o.MainExSkillLevel.Add(TableEncryptionService.Convert(this.MainExSkillLevel(_j), key));}
    _o.MainNoneExSkillLevel = new List<int>();
    for (var _j = 0; _j < this.MainNoneExSkillLevelLength; ++_j) {_o.MainNoneExSkillLevel.Add(TableEncryptionService.Convert(this.MainNoneExSkillLevel(_j), key));}
    _o.MainEquipment1Tier = new List<int>();
    for (var _j = 0; _j < this.MainEquipment1TierLength; ++_j) {_o.MainEquipment1Tier.Add(TableEncryptionService.Convert(this.MainEquipment1Tier(_j), key));}
    _o.MainEquipment1Level = new List<int>();
    for (var _j = 0; _j < this.MainEquipment1LevelLength; ++_j) {_o.MainEquipment1Level.Add(TableEncryptionService.Convert(this.MainEquipment1Level(_j), key));}
    _o.MainEquipment2Tier = new List<int>();
    for (var _j = 0; _j < this.MainEquipment2TierLength; ++_j) {_o.MainEquipment2Tier.Add(TableEncryptionService.Convert(this.MainEquipment2Tier(_j), key));}
    _o.MainEquipment2Level = new List<int>();
    for (var _j = 0; _j < this.MainEquipment2LevelLength; ++_j) {_o.MainEquipment2Level.Add(TableEncryptionService.Convert(this.MainEquipment2Level(_j), key));}
    _o.MainEquipment3Tier = new List<int>();
    for (var _j = 0; _j < this.MainEquipment3TierLength; ++_j) {_o.MainEquipment3Tier.Add(TableEncryptionService.Convert(this.MainEquipment3Tier(_j), key));}
    _o.MainEquipment3Level = new List<int>();
    for (var _j = 0; _j < this.MainEquipment3LevelLength; ++_j) {_o.MainEquipment3Level.Add(TableEncryptionService.Convert(this.MainEquipment3Level(_j), key));}
    _o.MainCharacterWeaponGrade = new List<int>();
    for (var _j = 0; _j < this.MainCharacterWeaponGradeLength; ++_j) {_o.MainCharacterWeaponGrade.Add(TableEncryptionService.Convert(this.MainCharacterWeaponGrade(_j), key));}
    _o.MainCharacterWeaponLevel = new List<int>();
    for (var _j = 0; _j < this.MainCharacterWeaponLevelLength; ++_j) {_o.MainCharacterWeaponLevel.Add(TableEncryptionService.Convert(this.MainCharacterWeaponLevel(_j), key));}
    _o.MainCharacterGearTier = new List<int>();
    for (var _j = 0; _j < this.MainCharacterGearTierLength; ++_j) {_o.MainCharacterGearTier.Add(TableEncryptionService.Convert(this.MainCharacterGearTier(_j), key));}
    _o.MainCharacterGearLevel = new List<int>();
    for (var _j = 0; _j < this.MainCharacterGearLevelLength; ++_j) {_o.MainCharacterGearLevel.Add(TableEncryptionService.Convert(this.MainCharacterGearLevel(_j), key));}
    _o.SupportCharacterID = new List<long>();
    for (var _j = 0; _j < this.SupportCharacterIDLength; ++_j) {_o.SupportCharacterID.Add(TableEncryptionService.Convert(this.SupportCharacterID(_j), key));}
    _o.SupportLevel = new List<int>();
    for (var _j = 0; _j < this.SupportLevelLength; ++_j) {_o.SupportLevel.Add(TableEncryptionService.Convert(this.SupportLevel(_j), key));}
    _o.SupportGrade = new List<int>();
    for (var _j = 0; _j < this.SupportGradeLength; ++_j) {_o.SupportGrade.Add(TableEncryptionService.Convert(this.SupportGrade(_j), key));}
    _o.SupportExSkillLevel = new List<int>();
    for (var _j = 0; _j < this.SupportExSkillLevelLength; ++_j) {_o.SupportExSkillLevel.Add(TableEncryptionService.Convert(this.SupportExSkillLevel(_j), key));}
    _o.SupportNoneExSkillLevel = new List<int>();
    for (var _j = 0; _j < this.SupportNoneExSkillLevelLength; ++_j) {_o.SupportNoneExSkillLevel.Add(TableEncryptionService.Convert(this.SupportNoneExSkillLevel(_j), key));}
    _o.SupportEquipment1Tier = new List<int>();
    for (var _j = 0; _j < this.SupportEquipment1TierLength; ++_j) {_o.SupportEquipment1Tier.Add(TableEncryptionService.Convert(this.SupportEquipment1Tier(_j), key));}
    _o.SupportEquipment1Level = new List<int>();
    for (var _j = 0; _j < this.SupportEquipment1LevelLength; ++_j) {_o.SupportEquipment1Level.Add(TableEncryptionService.Convert(this.SupportEquipment1Level(_j), key));}
    _o.SupportEquipment2Tier = new List<int>();
    for (var _j = 0; _j < this.SupportEquipment2TierLength; ++_j) {_o.SupportEquipment2Tier.Add(TableEncryptionService.Convert(this.SupportEquipment2Tier(_j), key));}
    _o.SupportEquipment2Level = new List<int>();
    for (var _j = 0; _j < this.SupportEquipment2LevelLength; ++_j) {_o.SupportEquipment2Level.Add(TableEncryptionService.Convert(this.SupportEquipment2Level(_j), key));}
    _o.SupportEquipment3Tier = new List<int>();
    for (var _j = 0; _j < this.SupportEquipment3TierLength; ++_j) {_o.SupportEquipment3Tier.Add(TableEncryptionService.Convert(this.SupportEquipment3Tier(_j), key));}
    _o.SupportEquipment3Level = new List<int>();
    for (var _j = 0; _j < this.SupportEquipment3LevelLength; ++_j) {_o.SupportEquipment3Level.Add(TableEncryptionService.Convert(this.SupportEquipment3Level(_j), key));}
    _o.SupportCharacterWeaponGrade = new List<int>();
    for (var _j = 0; _j < this.SupportCharacterWeaponGradeLength; ++_j) {_o.SupportCharacterWeaponGrade.Add(TableEncryptionService.Convert(this.SupportCharacterWeaponGrade(_j), key));}
    _o.SupportCharacterWeaponLevel = new List<int>();
    for (var _j = 0; _j < this.SupportCharacterWeaponLevelLength; ++_j) {_o.SupportCharacterWeaponLevel.Add(TableEncryptionService.Convert(this.SupportCharacterWeaponLevel(_j), key));}
    _o.SupportCharacterGearTier = new List<int>();
    for (var _j = 0; _j < this.SupportCharacterGearTierLength; ++_j) {_o.SupportCharacterGearTier.Add(TableEncryptionService.Convert(this.SupportCharacterGearTier(_j), key));}
    _o.SupportCharacterGearLevel = new List<int>();
    for (var _j = 0; _j < this.SupportCharacterGearLevelLength; ++_j) {_o.SupportCharacterGearLevel.Add(TableEncryptionService.Convert(this.SupportCharacterGearLevel(_j), key));}
    _o.InteractionTSCharacterId = TableEncryptionService.Convert(this.InteractionTSCharacterId, key);
  }
  public static Offset<SCHALE.Common.FlatData.FixedEchelonSettingExcel> Pack(FlatBufferBuilder builder, FixedEchelonSettingExcelT _o) {
    if (_o == null) return default(Offset<SCHALE.Common.FlatData.FixedEchelonSettingExcel>);
    var _MainCharacterID = default(VectorOffset);
    if (_o.MainCharacterID != null) {
      var __MainCharacterID = _o.MainCharacterID.ToArray();
      _MainCharacterID = CreateMainCharacterIDVector(builder, __MainCharacterID);
    }
    var _MainLevel = default(VectorOffset);
    if (_o.MainLevel != null) {
      var __MainLevel = _o.MainLevel.ToArray();
      _MainLevel = CreateMainLevelVector(builder, __MainLevel);
    }
    var _MainGrade = default(VectorOffset);
    if (_o.MainGrade != null) {
      var __MainGrade = _o.MainGrade.ToArray();
      _MainGrade = CreateMainGradeVector(builder, __MainGrade);
    }
    var _MainExSkillLevel = default(VectorOffset);
    if (_o.MainExSkillLevel != null) {
      var __MainExSkillLevel = _o.MainExSkillLevel.ToArray();
      _MainExSkillLevel = CreateMainExSkillLevelVector(builder, __MainExSkillLevel);
    }
    var _MainNoneExSkillLevel = default(VectorOffset);
    if (_o.MainNoneExSkillLevel != null) {
      var __MainNoneExSkillLevel = _o.MainNoneExSkillLevel.ToArray();
      _MainNoneExSkillLevel = CreateMainNoneExSkillLevelVector(builder, __MainNoneExSkillLevel);
    }
    var _MainEquipment1Tier = default(VectorOffset);
    if (_o.MainEquipment1Tier != null) {
      var __MainEquipment1Tier = _o.MainEquipment1Tier.ToArray();
      _MainEquipment1Tier = CreateMainEquipment1TierVector(builder, __MainEquipment1Tier);
    }
    var _MainEquipment1Level = default(VectorOffset);
    if (_o.MainEquipment1Level != null) {
      var __MainEquipment1Level = _o.MainEquipment1Level.ToArray();
      _MainEquipment1Level = CreateMainEquipment1LevelVector(builder, __MainEquipment1Level);
    }
    var _MainEquipment2Tier = default(VectorOffset);
    if (_o.MainEquipment2Tier != null) {
      var __MainEquipment2Tier = _o.MainEquipment2Tier.ToArray();
      _MainEquipment2Tier = CreateMainEquipment2TierVector(builder, __MainEquipment2Tier);
    }
    var _MainEquipment2Level = default(VectorOffset);
    if (_o.MainEquipment2Level != null) {
      var __MainEquipment2Level = _o.MainEquipment2Level.ToArray();
      _MainEquipment2Level = CreateMainEquipment2LevelVector(builder, __MainEquipment2Level);
    }
    var _MainEquipment3Tier = default(VectorOffset);
    if (_o.MainEquipment3Tier != null) {
      var __MainEquipment3Tier = _o.MainEquipment3Tier.ToArray();
      _MainEquipment3Tier = CreateMainEquipment3TierVector(builder, __MainEquipment3Tier);
    }
    var _MainEquipment3Level = default(VectorOffset);
    if (_o.MainEquipment3Level != null) {
      var __MainEquipment3Level = _o.MainEquipment3Level.ToArray();
      _MainEquipment3Level = CreateMainEquipment3LevelVector(builder, __MainEquipment3Level);
    }
    var _MainCharacterWeaponGrade = default(VectorOffset);
    if (_o.MainCharacterWeaponGrade != null) {
      var __MainCharacterWeaponGrade = _o.MainCharacterWeaponGrade.ToArray();
      _MainCharacterWeaponGrade = CreateMainCharacterWeaponGradeVector(builder, __MainCharacterWeaponGrade);
    }
    var _MainCharacterWeaponLevel = default(VectorOffset);
    if (_o.MainCharacterWeaponLevel != null) {
      var __MainCharacterWeaponLevel = _o.MainCharacterWeaponLevel.ToArray();
      _MainCharacterWeaponLevel = CreateMainCharacterWeaponLevelVector(builder, __MainCharacterWeaponLevel);
    }
    var _MainCharacterGearTier = default(VectorOffset);
    if (_o.MainCharacterGearTier != null) {
      var __MainCharacterGearTier = _o.MainCharacterGearTier.ToArray();
      _MainCharacterGearTier = CreateMainCharacterGearTierVector(builder, __MainCharacterGearTier);
    }
    var _MainCharacterGearLevel = default(VectorOffset);
    if (_o.MainCharacterGearLevel != null) {
      var __MainCharacterGearLevel = _o.MainCharacterGearLevel.ToArray();
      _MainCharacterGearLevel = CreateMainCharacterGearLevelVector(builder, __MainCharacterGearLevel);
    }
    var _SupportCharacterID = default(VectorOffset);
    if (_o.SupportCharacterID != null) {
      var __SupportCharacterID = _o.SupportCharacterID.ToArray();
      _SupportCharacterID = CreateSupportCharacterIDVector(builder, __SupportCharacterID);
    }
    var _SupportLevel = default(VectorOffset);
    if (_o.SupportLevel != null) {
      var __SupportLevel = _o.SupportLevel.ToArray();
      _SupportLevel = CreateSupportLevelVector(builder, __SupportLevel);
    }
    var _SupportGrade = default(VectorOffset);
    if (_o.SupportGrade != null) {
      var __SupportGrade = _o.SupportGrade.ToArray();
      _SupportGrade = CreateSupportGradeVector(builder, __SupportGrade);
    }
    var _SupportExSkillLevel = default(VectorOffset);
    if (_o.SupportExSkillLevel != null) {
      var __SupportExSkillLevel = _o.SupportExSkillLevel.ToArray();
      _SupportExSkillLevel = CreateSupportExSkillLevelVector(builder, __SupportExSkillLevel);
    }
    var _SupportNoneExSkillLevel = default(VectorOffset);
    if (_o.SupportNoneExSkillLevel != null) {
      var __SupportNoneExSkillLevel = _o.SupportNoneExSkillLevel.ToArray();
      _SupportNoneExSkillLevel = CreateSupportNoneExSkillLevelVector(builder, __SupportNoneExSkillLevel);
    }
    var _SupportEquipment1Tier = default(VectorOffset);
    if (_o.SupportEquipment1Tier != null) {
      var __SupportEquipment1Tier = _o.SupportEquipment1Tier.ToArray();
      _SupportEquipment1Tier = CreateSupportEquipment1TierVector(builder, __SupportEquipment1Tier);
    }
    var _SupportEquipment1Level = default(VectorOffset);
    if (_o.SupportEquipment1Level != null) {
      var __SupportEquipment1Level = _o.SupportEquipment1Level.ToArray();
      _SupportEquipment1Level = CreateSupportEquipment1LevelVector(builder, __SupportEquipment1Level);
    }
    var _SupportEquipment2Tier = default(VectorOffset);
    if (_o.SupportEquipment2Tier != null) {
      var __SupportEquipment2Tier = _o.SupportEquipment2Tier.ToArray();
      _SupportEquipment2Tier = CreateSupportEquipment2TierVector(builder, __SupportEquipment2Tier);
    }
    var _SupportEquipment2Level = default(VectorOffset);
    if (_o.SupportEquipment2Level != null) {
      var __SupportEquipment2Level = _o.SupportEquipment2Level.ToArray();
      _SupportEquipment2Level = CreateSupportEquipment2LevelVector(builder, __SupportEquipment2Level);
    }
    var _SupportEquipment3Tier = default(VectorOffset);
    if (_o.SupportEquipment3Tier != null) {
      var __SupportEquipment3Tier = _o.SupportEquipment3Tier.ToArray();
      _SupportEquipment3Tier = CreateSupportEquipment3TierVector(builder, __SupportEquipment3Tier);
    }
    var _SupportEquipment3Level = default(VectorOffset);
    if (_o.SupportEquipment3Level != null) {
      var __SupportEquipment3Level = _o.SupportEquipment3Level.ToArray();
      _SupportEquipment3Level = CreateSupportEquipment3LevelVector(builder, __SupportEquipment3Level);
    }
    var _SupportCharacterWeaponGrade = default(VectorOffset);
    if (_o.SupportCharacterWeaponGrade != null) {
      var __SupportCharacterWeaponGrade = _o.SupportCharacterWeaponGrade.ToArray();
      _SupportCharacterWeaponGrade = CreateSupportCharacterWeaponGradeVector(builder, __SupportCharacterWeaponGrade);
    }
    var _SupportCharacterWeaponLevel = default(VectorOffset);
    if (_o.SupportCharacterWeaponLevel != null) {
      var __SupportCharacterWeaponLevel = _o.SupportCharacterWeaponLevel.ToArray();
      _SupportCharacterWeaponLevel = CreateSupportCharacterWeaponLevelVector(builder, __SupportCharacterWeaponLevel);
    }
    var _SupportCharacterGearTier = default(VectorOffset);
    if (_o.SupportCharacterGearTier != null) {
      var __SupportCharacterGearTier = _o.SupportCharacterGearTier.ToArray();
      _SupportCharacterGearTier = CreateSupportCharacterGearTierVector(builder, __SupportCharacterGearTier);
    }
    var _SupportCharacterGearLevel = default(VectorOffset);
    if (_o.SupportCharacterGearLevel != null) {
      var __SupportCharacterGearLevel = _o.SupportCharacterGearLevel.ToArray();
      _SupportCharacterGearLevel = CreateSupportCharacterGearLevelVector(builder, __SupportCharacterGearLevel);
    }
    return CreateFixedEchelonSettingExcel(
      builder,
      _o.FixedEchelonID,
      _o.EchelonSceneSkip,
      _o.MainLeaderSlot,
      _MainCharacterID,
      _MainLevel,
      _MainGrade,
      _MainExSkillLevel,
      _MainNoneExSkillLevel,
      _MainEquipment1Tier,
      _MainEquipment1Level,
      _MainEquipment2Tier,
      _MainEquipment2Level,
      _MainEquipment3Tier,
      _MainEquipment3Level,
      _MainCharacterWeaponGrade,
      _MainCharacterWeaponLevel,
      _MainCharacterGearTier,
      _MainCharacterGearLevel,
      _SupportCharacterID,
      _SupportLevel,
      _SupportGrade,
      _SupportExSkillLevel,
      _SupportNoneExSkillLevel,
      _SupportEquipment1Tier,
      _SupportEquipment1Level,
      _SupportEquipment2Tier,
      _SupportEquipment2Level,
      _SupportEquipment3Tier,
      _SupportEquipment3Level,
      _SupportCharacterWeaponGrade,
      _SupportCharacterWeaponLevel,
      _SupportCharacterGearTier,
      _SupportCharacterGearLevel,
      _o.InteractionTSCharacterId);
  }
}

public class FixedEchelonSettingExcelT
{
  public long FixedEchelonID { get; set; }
  public bool EchelonSceneSkip { get; set; }
  public int MainLeaderSlot { get; set; }
  public List<long> MainCharacterID { get; set; }
  public List<int> MainLevel { get; set; }
  public List<int> MainGrade { get; set; }
  public List<int> MainExSkillLevel { get; set; }
  public List<int> MainNoneExSkillLevel { get; set; }
  public List<int> MainEquipment1Tier { get; set; }
  public List<int> MainEquipment1Level { get; set; }
  public List<int> MainEquipment2Tier { get; set; }
  public List<int> MainEquipment2Level { get; set; }
  public List<int> MainEquipment3Tier { get; set; }
  public List<int> MainEquipment3Level { get; set; }
  public List<int> MainCharacterWeaponGrade { get; set; }
  public List<int> MainCharacterWeaponLevel { get; set; }
  public List<int> MainCharacterGearTier { get; set; }
  public List<int> MainCharacterGearLevel { get; set; }
  public List<long> SupportCharacterID { get; set; }
  public List<int> SupportLevel { get; set; }
  public List<int> SupportGrade { get; set; }
  public List<int> SupportExSkillLevel { get; set; }
  public List<int> SupportNoneExSkillLevel { get; set; }
  public List<int> SupportEquipment1Tier { get; set; }
  public List<int> SupportEquipment1Level { get; set; }
  public List<int> SupportEquipment2Tier { get; set; }
  public List<int> SupportEquipment2Level { get; set; }
  public List<int> SupportEquipment3Tier { get; set; }
  public List<int> SupportEquipment3Level { get; set; }
  public List<int> SupportCharacterWeaponGrade { get; set; }
  public List<int> SupportCharacterWeaponLevel { get; set; }
  public List<int> SupportCharacterGearTier { get; set; }
  public List<int> SupportCharacterGearLevel { get; set; }
  public long InteractionTSCharacterId { get; set; }

  public FixedEchelonSettingExcelT() {
    this.FixedEchelonID = 0;
    this.EchelonSceneSkip = false;
    this.MainLeaderSlot = 0;
    this.MainCharacterID = null;
    this.MainLevel = null;
    this.MainGrade = null;
    this.MainExSkillLevel = null;
    this.MainNoneExSkillLevel = null;
    this.MainEquipment1Tier = null;
    this.MainEquipment1Level = null;
    this.MainEquipment2Tier = null;
    this.MainEquipment2Level = null;
    this.MainEquipment3Tier = null;
    this.MainEquipment3Level = null;
    this.MainCharacterWeaponGrade = null;
    this.MainCharacterWeaponLevel = null;
    this.MainCharacterGearTier = null;
    this.MainCharacterGearLevel = null;
    this.SupportCharacterID = null;
    this.SupportLevel = null;
    this.SupportGrade = null;
    this.SupportExSkillLevel = null;
    this.SupportNoneExSkillLevel = null;
    this.SupportEquipment1Tier = null;
    this.SupportEquipment1Level = null;
    this.SupportEquipment2Tier = null;
    this.SupportEquipment2Level = null;
    this.SupportEquipment3Tier = null;
    this.SupportEquipment3Level = null;
    this.SupportCharacterWeaponGrade = null;
    this.SupportCharacterWeaponLevel = null;
    this.SupportCharacterGearTier = null;
    this.SupportCharacterGearLevel = null;
    this.InteractionTSCharacterId = 0;
  }
}


static public class FixedEchelonSettingExcelVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*FixedEchelonID*/, 8 /*long*/, 8, false)
      && verifier.VerifyField(tablePos, 6 /*EchelonSceneSkip*/, 1 /*bool*/, 1, false)
      && verifier.VerifyField(tablePos, 8 /*MainLeaderSlot*/, 4 /*int*/, 4, false)
      && verifier.VerifyVectorOfData(tablePos, 10 /*MainCharacterID*/, 8 /*long*/, false)
      && verifier.VerifyVectorOfData(tablePos, 12 /*MainLevel*/, 4 /*int*/, false)
      && verifier.VerifyVectorOfData(tablePos, 14 /*MainGrade*/, 4 /*int*/, false)
      && verifier.VerifyVectorOfData(tablePos, 16 /*MainExSkillLevel*/, 4 /*int*/, false)
      && verifier.VerifyVectorOfData(tablePos, 18 /*MainNoneExSkillLevel*/, 4 /*int*/, false)
      && verifier.VerifyVectorOfData(tablePos, 20 /*MainEquipment1Tier*/, 4 /*int*/, false)
      && verifier.VerifyVectorOfData(tablePos, 22 /*MainEquipment1Level*/, 4 /*int*/, false)
      && verifier.VerifyVectorOfData(tablePos, 24 /*MainEquipment2Tier*/, 4 /*int*/, false)
      && verifier.VerifyVectorOfData(tablePos, 26 /*MainEquipment2Level*/, 4 /*int*/, false)
      && verifier.VerifyVectorOfData(tablePos, 28 /*MainEquipment3Tier*/, 4 /*int*/, false)
      && verifier.VerifyVectorOfData(tablePos, 30 /*MainEquipment3Level*/, 4 /*int*/, false)
      && verifier.VerifyVectorOfData(tablePos, 32 /*MainCharacterWeaponGrade*/, 4 /*int*/, false)
      && verifier.VerifyVectorOfData(tablePos, 34 /*MainCharacterWeaponLevel*/, 4 /*int*/, false)
      && verifier.VerifyVectorOfData(tablePos, 36 /*MainCharacterGearTier*/, 4 /*int*/, false)
      && verifier.VerifyVectorOfData(tablePos, 38 /*MainCharacterGearLevel*/, 4 /*int*/, false)
      && verifier.VerifyVectorOfData(tablePos, 40 /*SupportCharacterID*/, 8 /*long*/, false)
      && verifier.VerifyVectorOfData(tablePos, 42 /*SupportLevel*/, 4 /*int*/, false)
      && verifier.VerifyVectorOfData(tablePos, 44 /*SupportGrade*/, 4 /*int*/, false)
      && verifier.VerifyVectorOfData(tablePos, 46 /*SupportExSkillLevel*/, 4 /*int*/, false)
      && verifier.VerifyVectorOfData(tablePos, 48 /*SupportNoneExSkillLevel*/, 4 /*int*/, false)
      && verifier.VerifyVectorOfData(tablePos, 50 /*SupportEquipment1Tier*/, 4 /*int*/, false)
      && verifier.VerifyVectorOfData(tablePos, 52 /*SupportEquipment1Level*/, 4 /*int*/, false)
      && verifier.VerifyVectorOfData(tablePos, 54 /*SupportEquipment2Tier*/, 4 /*int*/, false)
      && verifier.VerifyVectorOfData(tablePos, 56 /*SupportEquipment2Level*/, 4 /*int*/, false)
      && verifier.VerifyVectorOfData(tablePos, 58 /*SupportEquipment3Tier*/, 4 /*int*/, false)
      && verifier.VerifyVectorOfData(tablePos, 60 /*SupportEquipment3Level*/, 4 /*int*/, false)
      && verifier.VerifyVectorOfData(tablePos, 62 /*SupportCharacterWeaponGrade*/, 4 /*int*/, false)
      && verifier.VerifyVectorOfData(tablePos, 64 /*SupportCharacterWeaponLevel*/, 4 /*int*/, false)
      && verifier.VerifyVectorOfData(tablePos, 66 /*SupportCharacterGearTier*/, 4 /*int*/, false)
      && verifier.VerifyVectorOfData(tablePos, 68 /*SupportCharacterGearLevel*/, 4 /*int*/, false)
      && verifier.VerifyField(tablePos, 70 /*InteractionTSCharacterId*/, 8 /*long*/, 8, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
