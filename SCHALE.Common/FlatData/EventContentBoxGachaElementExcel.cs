// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace SCHALE.Common.FlatData
{

using global::System;
using global::System.Collections.Generic;
using global::SCHALE.Common.Crypto;
using global::Google.FlatBuffers;

public struct EventContentBoxGachaElementExcel : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_24_3_25(); }
  public static EventContentBoxGachaElementExcel GetRootAsEventContentBoxGachaElementExcel(ByteBuffer _bb) { return GetRootAsEventContentBoxGachaElementExcel(_bb, new EventContentBoxGachaElementExcel()); }
  public static EventContentBoxGachaElementExcel GetRootAsEventContentBoxGachaElementExcel(ByteBuffer _bb, EventContentBoxGachaElementExcel obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public EventContentBoxGachaElementExcel __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public long EventContentId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public long Id { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public long Round { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public long GroupId { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }

  public static Offset<SCHALE.Common.FlatData.EventContentBoxGachaElementExcel> CreateEventContentBoxGachaElementExcel(FlatBufferBuilder builder,
      long EventContentId = 0,
      long Id = 0,
      long Round = 0,
      long GroupId = 0) {
    builder.StartTable(4);
    EventContentBoxGachaElementExcel.AddGroupId(builder, GroupId);
    EventContentBoxGachaElementExcel.AddRound(builder, Round);
    EventContentBoxGachaElementExcel.AddId(builder, Id);
    EventContentBoxGachaElementExcel.AddEventContentId(builder, EventContentId);
    return EventContentBoxGachaElementExcel.EndEventContentBoxGachaElementExcel(builder);
  }

  public static void StartEventContentBoxGachaElementExcel(FlatBufferBuilder builder) { builder.StartTable(4); }
  public static void AddEventContentId(FlatBufferBuilder builder, long eventContentId) { builder.AddLong(0, eventContentId, 0); }
  public static void AddId(FlatBufferBuilder builder, long id) { builder.AddLong(1, id, 0); }
  public static void AddRound(FlatBufferBuilder builder, long round) { builder.AddLong(2, round, 0); }
  public static void AddGroupId(FlatBufferBuilder builder, long groupId) { builder.AddLong(3, groupId, 0); }
  public static Offset<SCHALE.Common.FlatData.EventContentBoxGachaElementExcel> EndEventContentBoxGachaElementExcel(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<SCHALE.Common.FlatData.EventContentBoxGachaElementExcel>(o);
  }
  public EventContentBoxGachaElementExcelT UnPack() {
    var _o = new EventContentBoxGachaElementExcelT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(EventContentBoxGachaElementExcelT _o) {
		byte[] key = TableEncryptionService.CreateKey("EventContentBoxGachaElement");
    _o.EventContentId = TableEncryptionService.Convert(this.EventContentId, key);
    _o.Id = TableEncryptionService.Convert(this.Id, key);
    _o.Round = TableEncryptionService.Convert(this.Round, key);
    _o.GroupId = TableEncryptionService.Convert(this.GroupId, key);
  }
  public static Offset<SCHALE.Common.FlatData.EventContentBoxGachaElementExcel> Pack(FlatBufferBuilder builder, EventContentBoxGachaElementExcelT _o) {
    if (_o == null) return default(Offset<SCHALE.Common.FlatData.EventContentBoxGachaElementExcel>);
    return CreateEventContentBoxGachaElementExcel(
      builder,
      _o.EventContentId,
      _o.Id,
      _o.Round,
      _o.GroupId);
  }
}

public class EventContentBoxGachaElementExcelT
{
  public long EventContentId { get; set; }
  public long Id { get; set; }
  public long Round { get; set; }
  public long GroupId { get; set; }

  public EventContentBoxGachaElementExcelT() {
    this.EventContentId = 0;
    this.Id = 0;
    this.Round = 0;
    this.GroupId = 0;
  }
}


static public class EventContentBoxGachaElementExcelVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*EventContentId*/, 8 /*long*/, 8, false)
      && verifier.VerifyField(tablePos, 6 /*Id*/, 8 /*long*/, 8, false)
      && verifier.VerifyField(tablePos, 8 /*Round*/, 8 /*long*/, 8, false)
      && verifier.VerifyField(tablePos, 10 /*GroupId*/, 8 /*long*/, 8, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
